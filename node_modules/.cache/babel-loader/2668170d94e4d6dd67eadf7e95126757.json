{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/cards/items/actionFigureItem.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { NewInBoxIcon } from '../../../common/displayData/icons/newInBoxIcon';\nimport { OpenBoxIcon } from '../../../common/displayData/icons/openBoxIcon';\nimport { IMAGES } from '../../../../shared/constants/stringConstantsSelectors';\nexport const ActionFigureItem = props => {\n  const _props$item = props.item,\n        id = _props$item.id,\n        imageURL = _props$item.imageURL,\n        name = _props$item.name,\n        seriesNumber = _props$item.seriesNumber,\n        quantity = _props$item.quantity,\n        NIB = _props$item.NIB,\n        openComplete = _props$item.openComplete,\n        openIncomplete = _props$item.openIncomplete,\n        movieTv = _props$item.movieTv;\n  const displaySeriesNumber = seriesNumber && \"Series #: \".concat(seriesNumber);\n  const typeQuantity = \"Qty: \".concat(quantity);\n  const imageSource = props.realImages ? imageURL : IMAGES.FILL_MURRAY;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.item ? React.createElement(Card, {\n    style: {\n      margin: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    style: {\n      paddingTop: '60%',\n      height: '250px',\n      textAlign: 'top'\n    },\n    image: imageSource,\n    title: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, name, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, movieTv)), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, displaySeriesNumber), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, typeQuantity)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    href: imageURL,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Image +\"), NIB && React.createElement(NewInBoxIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), (openComplete || openIncomplete) && React.createElement(OpenBoxIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))) : null);\n};","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/cards/items/actionFigureItem.js"],"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","NewInBoxIcon","OpenBoxIcon","IMAGES","ActionFigureItem","props","item","id","imageURL","name","seriesNumber","quantity","NIB","openComplete","openIncomplete","movieTv","displaySeriesNumber","typeQuantity","imageSource","realImages","FILL_MURRAY","margin","paddingTop","height","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { NewInBoxIcon } from '../../../common/displayData/icons/newInBoxIcon';\nimport { OpenBoxIcon } from '../../../common/displayData/icons/openBoxIcon';\nimport { IMAGES } from '../../../../shared/constants/stringConstantsSelectors';\n\nexport const ActionFigureItem = props => {\n\n    const {\n        id,\n        imageURL,\n        name,\n        seriesNumber,\n        quantity,\n        NIB, \n        openComplete, \n        openIncomplete,\n        movieTv,\n    } = props.item;\n\n    const displaySeriesNumber =  seriesNumber && `Series #: ${seriesNumber}`;\n    const typeQuantity = `Qty: ${quantity}`;\n\n    const imageSource = props.realImages ?  imageURL : IMAGES.FILL_MURRAY;\n\n    return (\n        <div>\n            { props.item ? (\n                <Card style={{ margin: 5 }}>\n                    <CardMedia \n                        style={{ paddingTop: '60%', height: '250px', textAlign: 'top' }}  \n                        image={imageSource}\n                        title={id}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant='h5' component='h2'>\n                            {name}\n                            <Typography gutterBottom variant='subtitle1' component='h2'>{movieTv}</Typography>\n                        </Typography>\n                        <Typography component='p'>{displaySeriesNumber}</Typography>\n                        <Typography component='p'>{typeQuantity}</Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size='small' color='primary' href={imageURL} target='_blank'>Image +</Button>\n                        \n                        {NIB && <NewInBoxIcon color=\"primary\" />}\n                        {(openComplete || openIncomplete) && <OpenBoxIcon color=\"primary\" />}\n                    </CardActions>\n                </Card>\n            ) : null}\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}