{"ast":null,"code":"import _defineProperty from \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/higherOrderComponents/hotKeys.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { HotKeys as Hks } from 'react-hotkeys';\nimport { connect } from 'react-redux';\nexport const mapDispatchtoProps = props => _objectSpread({}, props);\n\nclass generic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStateFromDispatch = dispatch => dispatch((() => (dispatch2, getState) => getState)());\n\n    this.hotKeyHandlers = handlers(this.props.dispatch, this.getStateFromDispatch(this.props.dispatch));\n  }\n\n  render() {\n    return React.createElement(Hks, {\n      keyMap: keyMap,\n      handlers: this.hotKeyHandlers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport const HotKeys = (keyMap, handlers) => WrappedComponent => {\n  return connect(mapDispatchtoProps)();\n};\nexport default HotKeys;","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/higherOrderComponents/hotKeys.js"],"names":["React","Component","HotKeys","Hks","connect","mapDispatchtoProps","props","generic","constructor","getStateFromDispatch","dispatch","dispatch2","getState","hotKeyHandlers","handlers","render","keyMap","WrappedComponent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,KAAK,sBAAUA,KAAV,CAAhC;;AAEP,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAK5BO,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAFnBG,oBAEmB,GAFIC,QAAQ,IAAIA,QAAQ,CAAC,CAAC,MAAM,CAACC,SAAD,EAAYC,QAAZ,KAAyBA,QAAhC,GAAD,CAExB;;AAEf,SAAKC,cAAL,GAAsBC,QAAQ,CAAC,KAAKR,KAAL,CAAWI,QAAZ,EAAsB,KAAKD,oBAAL,CAA0B,KAAKH,KAAL,CAAWI,QAArC,CAAtB,CAA9B;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAEC,MAAb;AAAqB,MAAA,QAAQ,EAAE,KAAKH,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD,oBAAsB,KAAKP,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH;;AAhB2B;;AAmBhC,OAAO,MAAMJ,OAAO,GAAG,CAACc,MAAD,EAASF,QAAT,KAAsBG,gBAAgB,IAAI;AAC7D,SAAOb,OAAO,CAACC,kBAAD,CAAP,EAAP;AAGH,CAJM;AAMP,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { HotKeys as Hks } from 'react-hotkeys';\nimport { connect } from 'react-redux';\n\nexport const mapDispatchtoProps = props => ({ ...props });\n\nclass generic extends Component {\n    hotKeyHandlers;\n\n    getStateFromDispatch = dispatch => dispatch((() => (dispatch2, getState) => getState)());\n\n    constructor(props) {\n        super(props);\n        this.hotKeyHandlers = handlers(this.props.dispatch, this.getStateFromDispatch(this.props.dispatch));\n    }\n\n    render() {\n        return (\n            <Hks keyMap={keyMap} handlers={this.hotKeyHandlers}>\n                <WrappedComponent {...this.props}/>\n            </Hks>\n        );\n    }\n}\n\nexport const HotKeys = (keyMap, handlers) => WrappedComponent => {\n    return connect(mapDispatchtoProps)(\n\n    );\n};\n\nexport default HotKeys;"]},"metadata":{},"sourceType":"module"}