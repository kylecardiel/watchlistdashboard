{"ast":null,"code":"import { getSortDirection } from 'store/userSettings/userSettingsSelector';\nimport { SORT_DIRECTION } from 'shared/constants/stringConstantsSelectors';\nimport { addNotificationAction } from 'store/notifications/notificationActions';\nexport const TOGGLE_REAL_IMAGES = '[userSettings]TOGGLE_REAL_IMAGES';\nexport const toggleRealImages = isRealImage => ({\n  type: TOGGLE_REAL_IMAGES,\n  payload: isRealImage\n});\nexport const ENABLE_VIEW_TYPE_CARD = '[userSettings]ENABLE_VIEW_TYPE_CARD';\nexport const enableViewTypeCard = cardView => ({\n  type: ENABLE_VIEW_TYPE_CARD,\n  payload: cardView\n});\nexport const ENABLE_VIEW_TYPE_TABLE = '[userSettings]ENABLE_VIEW_TYPE_TABLE';\nexport const enableViewTypeTable = tableView => ({\n  type: ENABLE_VIEW_TYPE_TABLE,\n  payload: tableView\n});\nexport const TOGGLE_SORT_DIRECTION = '[userSettings]TOGGLE_SORT_DIRECTION';\nexport const toggleSortDirection = () => (dispatch, getState) => {\n  const currentSortDirection = getSortDirection(getState());\n  const newSortDirection = currentSortDirection === SORT_DIRECTION.ASC ? SORT_DIRECTION.DESC : SORT_DIRECTION.ASC;\n  dispatch(_toggleSortDirection(newSortDirection));\n};\n\nconst _toggleSortDirection = direction => ({\n  type: TOGGLE_SORT_DIRECTION,\n  payload: direction\n});\n\nexport const TOGGLE_DEMO_MODE = '[userSettings]TOGGLE_DEMO_MODE';\nexport const toggleDemoMode = () => dispatch => {\n  dispatch(_toggleDemoMode());\n  dispatch(addNotificationAction(1, type, message));\n};\n\nconst _toggleDemoMode = () => ({\n  type: TOGGLE_DEMO_MODE,\n  payload: ''\n});","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/store/userSettings/userSettingsActions.js"],"names":["getSortDirection","SORT_DIRECTION","addNotificationAction","TOGGLE_REAL_IMAGES","toggleRealImages","isRealImage","type","payload","ENABLE_VIEW_TYPE_CARD","enableViewTypeCard","cardView","ENABLE_VIEW_TYPE_TABLE","enableViewTypeTable","tableView","TOGGLE_SORT_DIRECTION","toggleSortDirection","dispatch","getState","currentSortDirection","newSortDirection","ASC","DESC","_toggleSortDirection","direction","TOGGLE_DEMO_MODE","toggleDemoMode","_toggleDemoMode","message"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,yCAAjC;AACA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,qBAAT,QAAsC,yCAAtC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,kCAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAGC,WAAW,KAAK;AAC5CC,EAAAA,IAAI,EAAEH,kBADsC;AAE5CI,EAAAA,OAAO,EAAEF;AAFmC,CAAL,CAApC;AAKP,OAAO,MAAMG,qBAAqB,GAAG,qCAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AAC3CJ,EAAAA,IAAI,EAAEE,qBADqC;AAE3CD,EAAAA,OAAO,EAAEG;AAFkC,CAAL,CAAnC;AAKP,OAAO,MAAMC,sBAAsB,GAAG,sCAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAGC,SAAS,KAAK;AAC7CP,EAAAA,IAAI,EAAEK,sBADuC;AAE7CJ,EAAAA,OAAO,EAAEM;AAFoC,CAAL,CAArC;AAKP,OAAO,MAAMC,qBAAqB,GAAG,qCAA9B;AACP,OAAO,MAAMC,mBAAmB,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7D,QAAMC,oBAAoB,GAAGlB,gBAAgB,CAACiB,QAAQ,EAAT,CAA7C;AACA,QAAME,gBAAgB,GAAGD,oBAAoB,KAAKjB,cAAc,CAACmB,GAAxC,GAA8CnB,cAAc,CAACoB,IAA7D,GAAoEpB,cAAc,CAACmB,GAA5G;AACAJ,EAAAA,QAAQ,CAACM,oBAAoB,CAACH,gBAAD,CAArB,CAAR;AACH,CAJM;;AAMP,MAAMG,oBAAoB,GAAGC,SAAS,KAAK;AACvCjB,EAAAA,IAAI,EAAEQ,qBADiC;AAEvCP,EAAAA,OAAO,EAAEgB;AAF8B,CAAL,CAAtC;;AAKA,OAAO,MAAMC,gBAAgB,GAAG,gCAAzB;AACP,OAAO,MAAMC,cAAc,GAAG,MAAOT,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACU,eAAe,EAAhB,CAAR;AAEAV,EAAAA,QAAQ,CAACd,qBAAqB,CAAC,CAAD,EAAGI,IAAH,EAASqB,OAAT,CAAtB,CAAR;AACH,CAJM;;AAMP,MAAMD,eAAe,GAAG,OAAO;AAC3BpB,EAAAA,IAAI,EAAEkB,gBADqB;AAE3BjB,EAAAA,OAAO,EAAE;AAFkB,CAAP,CAAxB","sourcesContent":["import { getSortDirection } from 'store/userSettings/userSettingsSelector';\nimport { SORT_DIRECTION } from 'shared/constants/stringConstantsSelectors';\nimport { addNotificationAction } from 'store/notifications/notificationActions';\n\nexport const TOGGLE_REAL_IMAGES = '[userSettings]TOGGLE_REAL_IMAGES';\nexport const toggleRealImages = isRealImage => ({\n    type: TOGGLE_REAL_IMAGES,\n    payload: isRealImage,\n});\n\nexport const ENABLE_VIEW_TYPE_CARD = '[userSettings]ENABLE_VIEW_TYPE_CARD';\nexport const enableViewTypeCard = cardView => ({\n    type: ENABLE_VIEW_TYPE_CARD,\n    payload: cardView,\n});\n\nexport const ENABLE_VIEW_TYPE_TABLE = '[userSettings]ENABLE_VIEW_TYPE_TABLE';\nexport const enableViewTypeTable = tableView => ({\n    type: ENABLE_VIEW_TYPE_TABLE,\n    payload: tableView,\n});\n\nexport const TOGGLE_SORT_DIRECTION = '[userSettings]TOGGLE_SORT_DIRECTION';\nexport const toggleSortDirection = () => (dispatch, getState) => {\n    const currentSortDirection = getSortDirection(getState());\n    const newSortDirection = currentSortDirection === SORT_DIRECTION.ASC ? SORT_DIRECTION.DESC : SORT_DIRECTION.ASC;\n    dispatch(_toggleSortDirection(newSortDirection));\n};\n\nconst _toggleSortDirection = direction => ({\n    type: TOGGLE_SORT_DIRECTION,\n    payload: direction,\n});\n\nexport const TOGGLE_DEMO_MODE = '[userSettings]TOGGLE_DEMO_MODE';\nexport const toggleDemoMode = () =>  dispatch => {\n    dispatch(_toggleDemoMode());\n\n    dispatch(addNotificationAction(1,type, message));\n};\n\nconst _toggleDemoMode = () => ({\n    type: TOGGLE_DEMO_MODE,\n    payload: '',\n});"]},"metadata":{},"sourceType":"module"}