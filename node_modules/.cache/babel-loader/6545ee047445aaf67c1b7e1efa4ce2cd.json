{"ast":null,"code":"import _slicedToArray from \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js\";\nimport React, { useState } from 'react'; // import MultiSelect from 'components/common/input/selects/multiSelect';\n\nimport { FILTER_LABELS, ALL_ACTION_FIGURE_ATTRIBUTES } from 'shared/constants/stringConstantsSelectors'; // import { SingleSelect } from 'components/common/input/selects/singleSelect';\n\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nexport const AddNewItemForm = props => {\n  // const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        attributeValue = _useState2[0],\n        setAttributeValue = _useState2[1];\n\n  const handleChange = event => {\n    setAttributeValue(event.target.value);\n  };\n\n  const multiSelect = (inputLabel, list, handleChange) => {\n    return React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, inputLabel), React.createElement(Select, {\n      labelId: \"demo-mutiple-checkbox-label\",\n      id: \"demo-mutiple-checkbox\",\n      multiple: true,\n      value: attributeValue,\n      onChange: handleChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }),\n      renderValue: selected => selected.join(', '),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, list.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: attributeValue.indexOf(name) > -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))));\n  };\n\n  const groupSelect = () => {\n    return multiSelect(FILTER_LABELS.GROUP, DOMAIN.GROUP_NAMES, handleChange);\n  };\n\n  console.log(attributeValue);\n  return React.createElement(React.Fragment, null, React.createElement(SingleSelect, {\n    handleFilterChange: props.handleProductType,\n    inputLabel: FILTER_LABELS.PRODUCT_TYPE,\n    menuItems: DOMAIN.PRODUCT_TYPE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), groupSelect());\n};\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}; // id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// nib ...\n// openComplete ...\n// openIncomplete ...\n// quantity ...\n// versions\n// imageURL ...\n// assortment\n// group","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js"],"names":["React","useState","FILTER_LABELS","ALL_ACTION_FIGURE_ATTRIBUTES","DOMAIN","makeStyles","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","AddNewItemForm","props","classes","useStyles","attributeValue","setAttributeValue","handleChange","event","target","value","multiSelect","inputLabel","list","formControl","selected","join","MenuProps","map","name","indexOf","groupSelect","GROUP","GROUP_NAMES","console","log","handleProductType","PRODUCT_TYPE","theme","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","PaperProps","style","maxHeight","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,4BAAxB,QAA4D,2CAA5D,C,CACA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,0CAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC;AAEA,QAAMC,OAAO,GAAGC,SAAS,EAAzB;;AAHmC,oBAISf,QAAQ,CAAC,EAAD,CAJjB;AAAA;AAAA,QAI5BgB,cAJ4B;AAAA,QAIZC,iBAJY;;AAMnC,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,IAAb,EAAmBN,YAAnB,KAAoC;AACpD,WAAQ,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEJ,OAAO,CAACW,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CF,UAA9C,CADI,EAEJ,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,6BADZ;AAEI,MAAA,EAAE,EAAC,uBAFP;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,KAAK,EAAEP,cAJX;AAKI,MAAA,QAAQ,EAAEE,YALd;AAMI,MAAA,KAAK,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANX;AAOI,MAAA,WAAW,EAAEQ,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAP7B;AAQI,MAAA,SAAS,EAAEC,SARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKJ,IAAI,CAACK,GAAL,CAASC,IAAI,IACV,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAf;AAAqB,MAAA,KAAK,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEd,cAAc,CAACe,OAAf,CAAuBD,IAAvB,IAA+B,CAAC,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,CAVL,CAFI,CAAR;AAoBH,GArBD;;AAwBA,QAAME,WAAW,GAAG,MAAM;AACtB,WAAOV,WAAW,CAACrB,aAAa,CAACgC,KAAf,EAAsB9B,MAAM,CAAC+B,WAA7B,EAA0ChB,YAA1C,CAAlB;AACH,GAFD;;AAIAiB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,cAAZ;AAEA,SACI,0CACI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAEH,KAAK,CAACwB,iBAD9B;AAEI,IAAA,UAAU,EAAEpC,aAAa,CAACqC,YAF9B;AAGI,IAAA,SAAS,EAAEnC,MAAM,CAACmC,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMKN,WAAW,EANhB,CADJ;AA4BH,CApEM;AAuEP,MAAMjB,SAAS,GAAGX,UAAU,CAACmC,KAAK,KAAK;AACnCd,EAAAA,WAAW,EAAE;AACTe,IAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE,GAFD;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADsB;AAMnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAN4B;AAUnCC,EAAAA,IAAI,EAAE;AACFP,IAAAA,MAAM,EAAE;AADN,GAV6B;AAanCQ,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAEV,KAAK,CAACE,OAAN,CAAc,CAAd;AADN;AAb0B,CAAL,CAAN,CAA5B;AAkBA,MAAMS,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMvB,SAAS,GAAG;AACdwB,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEJ,WAAW,GAAG,GAAd,GAAoBC,gBAD5B;AAEHI,MAAAA,KAAK,EAAE;AAFJ;AADC;AADE,CAAlB,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\n// import MultiSelect from 'components/common/input/selects/multiSelect';\nimport { FILTER_LABELS, ALL_ACTION_FIGURE_ATTRIBUTES } from 'shared/constants/stringConstantsSelectors';\n// import { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const AddNewItemForm = props => {\n    // const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n\n    const classes = useStyles();\n    const [attributeValue, setAttributeValue] = useState([]);\n\n    const handleChange = event => {\n        setAttributeValue(event.target.value);\n    };\n\n    const multiSelect = (inputLabel, list, handleChange) => {\n        return  <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-checkbox-label\">{inputLabel}</InputLabel>\n            <Select\n                labelId=\"demo-mutiple-checkbox-label\"\n                id=\"demo-mutiple-checkbox\"\n                multiple\n                value={attributeValue}\n                onChange={handleChange}\n                input={<Input />}\n                renderValue={selected => selected.join(', ')}\n                MenuProps={MenuProps}\n            >\n                {list.map(name => (\n                    <MenuItem key={name} value={name}>\n                        <Checkbox checked={attributeValue.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    };\n\n\n    const groupSelect = () => {\n        return multiSelect(FILTER_LABELS.GROUP, DOMAIN.GROUP_NAMES, handleChange);\n    };\n\n    console.log(attributeValue);\n\n    return (\n        <>\n            <SingleSelect \n                handleFilterChange={props.handleProductType} \n                inputLabel={FILTER_LABELS.PRODUCT_TYPE}\n                menuItems={DOMAIN.PRODUCT_TYPE}\n            /> \n            {groupSelect()}\n            {/*            \n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByContentSource} \n                inputLabel={FILTER_LABELS.SOURCE}\n                menuItems={DOMAIN.ALL_SOURCE_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByCharacter} \n                inputLabel={FILTER_LABELS.CHARACTERS}\n                menuItems={DOMAIN.CHARACTER_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByAssortment} \n                inputLabel={FILTER_LABELS.ASSORTMENT}\n                menuItems={assortOptions}\n            />\n            <MultiSelect inputLabel={FILTER_LABELS.GROUP} list={DOMAIN.GROUP_NAMES} handleChange={handleChange}/>\n            <MultiSelect inputLabel={FILTER_LABELS.VERSIONS} list={DOMAIN.VERSIONS}/> */}\n        </>\n    );\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\n\n// id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// nib ...\n// openComplete ...\n// openIncomplete ...\n// quantity ...\n// versions\n// imageURL ...\n// assortment\n// group"]},"metadata":{},"sourceType":"module"}