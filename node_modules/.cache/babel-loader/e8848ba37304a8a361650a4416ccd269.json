{"ast":null,"code":"import _slicedToArray from \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/common/input/selects/multiSelect.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nexport default function MultipleSelect(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        attributeValue = _React$useState2[0],\n        setAttributeValue = _React$useState2[1];\n\n  const handleChange = event => {\n    setAttributeValue(event.target.value);\n    props.handleChange(event);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-checkbox-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.inputLabel), React.createElement(Select, {\n    labelId: \"demo-mutiple-checkbox-label\",\n    id: \"demo-mutiple-checkbox\",\n    multiple: true,\n    value: attributeValue,\n    onChange: event => props.handleChange(event),\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.list.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: attributeValue.indexOf(name) > -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/common/input/selects/multiSelect.js"],"names":["React","makeStyles","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","MultipleSelect","props","classes","useState","attributeValue","setAttributeValue","handleChange","event","target","value","inputLabel","selected","join","list","map","name","indexOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\n\n\nexport default function MultipleSelect(props) {\n    const classes = useStyles();\n    const [attributeValue, setAttributeValue] = React.useState([]);\n\n    const handleChange = event => {\n        setAttributeValue(event.target.value);\n        props.handleChange(event)\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-mutiple-checkbox-label\">{props.inputLabel}</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-checkbox-label\"\n                    id=\"demo-mutiple-checkbox\"\n                    multiple\n                    value={attributeValue}\n                    onChange={event => props.handleChange(event)}\n                    input={<Input />}\n                    renderValue={selected => selected.join(', ')}\n                    MenuProps={MenuProps}\n                >\n                    {props.list.map(name => (\n                        <MenuItem key={name} value={name}>\n                            <Checkbox checked={attributeValue.indexOf(name) > -1} />\n                            <ListItemText primary={name} />\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}