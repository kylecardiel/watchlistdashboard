{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/higherOrderComponents/collectionListConnect.js\";\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CollectionList } from 'components/collectionList';\nimport { toggleRealImages, enableViewTypeCard, enableViewTypeTable, toggleSortDirection } from 'store/userSettings/userSettingsActions';\nimport { useRealImages, getCardViewType, getTableViewType, getSortDirection, getDemoMode } from 'store/userSettings/userSettingsSelector';\nimport { getSortAttribute, getProductType, getProductLine, getDisplayedData } from 'store/dataSet/dataSetSelector';\nimport { changeCurrentSortAttribute, changeProductType, changeProductLine, setDisplayData } from 'store/dataSet/dataSetActions';\nimport { compose } from 'redux';\nimport HotKeys from 'components/higherOrderComponents/hotKeys';\nimport { AppHotKeys } from 'components/hotKeys/appHotKeys';\nimport { ToastContainer as NotificationContainer } from 'react-toastify';\nimport { toast as notificationCreator } from 'react-toastify';\nexport class CollectionListConnect extends Component {\n  render() {\n    notificationCreator.info('asdffasdfasdf');\n    return React.createElement(React.Fragment, null, React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(CollectionList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\nexport const mapStateToProps = state => ({\n  realImages: useRealImages(state),\n  cardView: getCardViewType(state),\n  tableView: getTableViewType(state),\n  sortDirection: getSortDirection(state),\n  sortAttribute: getSortAttribute(state),\n  productType: getProductType(state),\n  productLine: getProductLine(state),\n  displayedData: getDisplayedData(state),\n  demoMode: getDemoMode(state)\n});\nexport const mapDispatchToProps = dispatch => ({\n  toggleRealImages: () => dispatch(toggleRealImages()),\n  enableViewTypeCard: () => dispatch(enableViewTypeCard('cardView')),\n  enableViewTypeTable: () => dispatch(enableViewTypeTable('tableView')),\n  toggleSortDirection: () => dispatch(toggleSortDirection()),\n  changeCurrentSortAttribute: sortAttribute => {\n    dispatch(changeCurrentSortAttribute(sortAttribute));\n  },\n  changeProductType: productType => {\n    dispatch(changeProductType(productType));\n  },\n  changeProductLine: productLine => {\n    dispatch(changeProductLine(productLine));\n  },\n  setDisplayData: data => {\n    dispatch(setDisplayData(data));\n  }\n});\nexport const hotKeyConnect = compose(HotKeys(AppHotKeys.KeyMap, AppHotKeys.Handlers), connect(mapStateToProps, mapDispatchToProps));\nexport default hotKeyConnect(CollectionList);","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/higherOrderComponents/collectionListConnect.js"],"names":["React","Component","connect","CollectionList","toggleRealImages","enableViewTypeCard","enableViewTypeTable","toggleSortDirection","useRealImages","getCardViewType","getTableViewType","getSortDirection","getDemoMode","getSortAttribute","getProductType","getProductLine","getDisplayedData","changeCurrentSortAttribute","changeProductType","changeProductLine","setDisplayData","compose","HotKeys","AppHotKeys","ToastContainer","NotificationContainer","toast","notificationCreator","CollectionListConnect","render","info","mapStateToProps","state","realImages","cardView","tableView","sortDirection","sortAttribute","productType","productLine","displayedData","demoMode","mapDispatchToProps","dispatch","data","hotKeyConnect","KeyMap","Handlers"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CollectionList } from 'components/collectionList';\nimport { toggleRealImages, enableViewTypeCard, enableViewTypeTable, toggleSortDirection } from 'store/userSettings/userSettingsActions';\nimport { useRealImages, getCardViewType, getTableViewType, getSortDirection, getDemoMode } from 'store/userSettings/userSettingsSelector';\nimport { getSortAttribute, getProductType, getProductLine, getDisplayedData } from 'store/dataSet/dataSetSelector';\nimport { changeCurrentSortAttribute, changeProductType, changeProductLine, setDisplayData } from 'store/dataSet/dataSetActions';\nimport { compose } from 'redux';\nimport HotKeys from 'components/higherOrderComponents/hotKeys';\nimport { AppHotKeys } from 'components/hotKeys/appHotKeys';\nimport { ToastContainer as NotificationContainer } from 'react-toastify';\nimport { toast as notificationCreator } from 'react-toastify';\n\nexport class CollectionListConnect extends Component {\n    render() {\n        notificationCreator.info('asdffasdfasdf');\n        return (\n            <>\n                <NotificationContainer />\n                <CollectionList />\n            </>\n        );\n    }\n}\n\nexport const mapStateToProps = state => ({\n    realImages: useRealImages(state),\n    cardView: getCardViewType(state),\n    tableView: getTableViewType(state),\n    sortDirection: getSortDirection(state),\n    sortAttribute: getSortAttribute(state),\n    productType: getProductType(state),\n    productLine: getProductLine(state),\n    displayedData: getDisplayedData(state),\n    demoMode: getDemoMode(state),\n});\n\nexport const mapDispatchToProps = dispatch => ({\n    toggleRealImages: () => dispatch(toggleRealImages()),\n    enableViewTypeCard: () => dispatch(enableViewTypeCard('cardView')),\n    enableViewTypeTable: () => dispatch(enableViewTypeTable('tableView')),\n    toggleSortDirection: () => dispatch(toggleSortDirection()),\n    changeCurrentSortAttribute: sortAttribute => {\n        dispatch(changeCurrentSortAttribute(sortAttribute));\n    },\n    changeProductType: productType => {\n        dispatch(changeProductType(productType));\n    },\n    changeProductLine: productLine => {\n        dispatch(changeProductLine(productLine));\n    },\n    setDisplayData: data => { \n        dispatch(setDisplayData(data));\n    },\n});\n\nexport const hotKeyConnect = compose(\n    HotKeys(AppHotKeys.KeyMap, AppHotKeys.Handlers),\n    connect(mapStateToProps, mapDispatchToProps),\n);\n\nexport default hotKeyConnect(CollectionList);"]},"metadata":{},"sourceType":"module"}