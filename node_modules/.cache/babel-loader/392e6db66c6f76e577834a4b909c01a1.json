{"ast":null,"code":"import _defineProperty from \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/higherOrderComponents/hotKeys.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { HotKeys as Hks } from 'react-hotkeys';\nimport { connect } from 'react-redux';\nexport const mapDispatchtoProps = props => _objectSpread({}, props);\nexport const HotKeys = (keyMap, handlers) => WrappedComponent => {\n  var _temp;\n\n  return connect(mapDispatchtoProps)((_temp = class extends Component {\n    constructor(props) {\n      super(props);\n\n      this.getStateFromDispatch = dispatch => dispatch((() => (dispatch2, getState) => getState)());\n\n      this.hotKeyHandlers = handlers(this.props.dispatch, this.getStateFromDispatch(this.props.dispatch));\n    }\n\n    render() {\n      return React.createElement(HotKeys, {\n        keyMap: keyMap,\n        handlers: this.hotKeyHandlers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp));\n};\nexport default HotKeys;","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/higherOrderComponents/hotKeys.js"],"names":["React","Component","HotKeys","Hks","connect","mapDispatchtoProps","props","keyMap","handlers","WrappedComponent","constructor","getStateFromDispatch","dispatch","dispatch2","getState","hotKeyHandlers","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,KAAK,sBAAUA,KAAV,CAAhC;AAEP,OAAO,MAAMJ,OAAO,GAAG,CAACK,MAAD,EAASC,QAAT,KAAsBC,gBAAgB,IAAI;AAAA;;AAC7D,SAAOL,OAAO,CAACC,kBAAD,CAAP,UACH,cAAcJ,SAAd,CAAwB;AAKpBS,IAAAA,WAAW,CAACJ,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAFnBK,oBAEmB,GAFIC,QAAQ,IAAIA,QAAQ,CAAC,CAAC,MAAM,CAACC,SAAD,EAAYC,QAAZ,KAAyBA,QAAhC,GAAD,CAExB;;AAEf,WAAKC,cAAL,GAAsBP,QAAQ,CAAC,KAAKF,KAAL,CAAWM,QAAZ,EAAsB,KAAKD,oBAAL,CAA0B,KAAKL,KAAL,CAAWM,QAArC,CAAtB,CAA9B;AACH;;AAEDI,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAET,MAAjB;AAAyB,QAAA,QAAQ,EAAE,KAAKQ,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD,oBAAsB,KAAKT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ;AAKH;;AAhBmB,GADrB,SAAP;AAoBH,CArBM;AAuBP,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { HotKeys as Hks } from 'react-hotkeys';\nimport { connect } from 'react-redux';\n\nexport const mapDispatchtoProps = props => ({ ...props });\n\nexport const HotKeys = (keyMap, handlers) => WrappedComponent => {\n    return connect(mapDispatchtoProps)(\n        class extends Component {\n            hotKeyHandlers;\n\n            getStateFromDispatch = dispatch => dispatch((() => (dispatch2, getState) => getState)());\n\n            constructor(props) {\n                super(props);\n                this.hotKeyHandlers = handlers(this.props.dispatch, this.getStateFromDispatch(this.props.dispatch));\n            }\n\n            render() {\n                return (\n                    <HotKeys keyMap={keyMap} handlers={this.hotKeyHandlers}>\n                        <WrappedComponent {...this.props}/>\n                    </HotKeys>\n                );\n            }\n        }\n    );\n};\n\nexport default HotKeys;"]},"metadata":{},"sourceType":"module"}