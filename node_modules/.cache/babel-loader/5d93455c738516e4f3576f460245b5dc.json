{"ast":null,"code":"import * as actions from 'store/notifications/notificationActions';\nimport { initialState } from 'store/initialState';\nexport const notifications = (state = initialState.notifications, action) => {\n  switch (action.type) {\n    case actions.ADD_NOTIFICATION:\n      {\n        const cloneState = cloneDeep(state);\n        cloneState.realImages = !cloneState.realImages;\n        return [...state, action.payload];\n      }\n\n    case actions.OPEN_NOTIFCIATION_DRAWER:\n    case actions.CLOSE_NOTIFCIATION_DRAWER:\n      {\n        return Object.assign({}, state, {\n          isOpen: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/store/notifications/notificationReducer.js"],"names":["actions","initialState","notifications","state","action","type","ADD_NOTIFICATION","cloneState","cloneDeep","realImages","payload","OPEN_NOTIFCIATION_DRAWER","CLOSE_NOTIFCIATION_DRAWER","Object","assign","isOpen"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,yCAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGF,YAAY,CAACC,aAAtB,EAAqCE,MAArC,KAAgD;AACzE,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKL,OAAO,CAACM,gBAAb;AAA+B;AAC3B,cAAMC,UAAU,GAAGC,SAAS,CAACL,KAAD,CAA5B;AACAI,QAAAA,UAAU,CAACE,UAAX,GAAwB,CAACF,UAAU,CAACE,UAApC;AACA,eAAO,CAAC,GAAGN,KAAJ,EAAWC,MAAM,CAACM,OAAlB,CAAP;AACH;;AACD,SAAKV,OAAO,CAACW,wBAAb;AACA,SAAKX,OAAO,CAACY,yBAAb;AAAwC;AACpC,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAAEY,UAAAA,MAAM,EAAEX,MAAM,CAACM;AAAjB,SAAzB,CAAP;AACH;;AACD;AACI,aAAOP,KAAP;AAXJ;AAaH,CAdM","sourcesContent":["import * as actions from 'store/notifications/notificationActions';\nimport { initialState } from 'store/initialState';\n\nexport const notifications = (state = initialState.notifications, action) => {\n    switch (action.type) {\n    case actions.ADD_NOTIFICATION: {\n        const cloneState = cloneDeep(state);\n        cloneState.realImages = !cloneState.realImages;\n        return [...state, action.payload];\n    }\n    case actions.OPEN_NOTIFCIATION_DRAWER:\n    case actions.CLOSE_NOTIFCIATION_DRAWER: {\n        return Object.assign({}, state, { isOpen: action.payload });\n    }\n    default:\n        return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}