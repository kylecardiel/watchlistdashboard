{"ast":null,"code":"/**\n * Lowercased string representing a particular keyboard key\n * @typedef {string} NormalizedKeyName\n */\nimport reactsGetEventKey from '../../vendor/react-dom/reactsGetEventKey';\nimport Configuration from '../../lib/config/Configuration';\nimport hasKey from '../../utils/object/hasKey';\n/**\n * Returns key name from native or React keyboard event\n * @param {KeyboardEvent} event - Event containing the key name\n * @returns {NormalizedKeyName} Normalized name of the key\n */\n\nfunction getKeyName(event) {\n  var keyName = function () {\n    var customKeyCodes = Configuration.option('customKeyCodes');\n    var keyCode = event.keyCode || event.charCode;\n\n    if (hasKey(customKeyCodes, keyCode)) {\n      return customKeyCodes[keyCode];\n    }\n\n    if (event.nativeEvent) {\n      return event.key;\n    } else {\n      return reactsGetEventKey(event);\n    }\n  }();\n\n  if (keyName === '+') {\n    return 'plus';\n  } else {\n    return keyName;\n  }\n}\n\nexport default getKeyName;","map":null,"metadata":{},"sourceType":"module"}