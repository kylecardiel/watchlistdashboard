{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/components/domain/displayData/cards/items/legoItem.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IMAGES } from 'shared/constants/stringConstantsSelectors';\nexport const LegoItem = props => {\n  const _props$item = props.item,\n        id = _props$item.id,\n        name = _props$item.name,\n        setNumber = _props$item.setNumber,\n        minifigures = _props$item.minifigures,\n        imageURL = _props$item.imageURL,\n        pieces = _props$item.pieces,\n        year = _props$item.year;\n  const imageSource = props.realImages ? imageURL : IMAGES.FILL_MURRAY;\n  const minifiguresDisplay = minifigures.map(fig => React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, fig)));\n  const useStyles = makeStyles({\n    card: {\n      margin: 5\n    }\n  });\n  const classes = useStyles();\n  const displayYear = \"Year: \".concat(year);\n  const displaySet = \"Set #: \".concat(setNumber);\n  const displayPiece = \"Pieces: \".concat(pieces);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.item ? React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    style: {\n      paddingTop: '60%',\n      height: '200px',\n      textAlign: 'top'\n    },\n    image: imageSource,\n    title: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, name), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, displayYear), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, displaySet, \" - \", displayPiece), minifiguresDisplay), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    href: imageURL,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Image +\"))) : null);\n};","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/components/domain/displayData/cards/items/legoItem.js"],"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","makeStyles","IMAGES","LegoItem","props","item","id","name","setNumber","minifigures","imageURL","pieces","year","imageSource","realImages","FILL_MURRAY","minifiguresDisplay","map","fig","useStyles","card","margin","classes","displayYear","displaySet","displayPiece","paddingTop","height","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IMAGES } from 'shared/constants/stringConstantsSelectors';\n\nexport const LegoItem = props => {\n\n    const {\n        id,\n        name,\n        setNumber,\n        minifigures,\n        imageURL,\n        pieces,\n        year,\n    } = props.item;\n\n    const imageSource = props.realImages ?  imageURL : IMAGES.FILL_MURRAY;\n\n    const minifiguresDisplay = minifigures.map(fig => (\n        <Typography component='p'><li>{fig}</li></Typography>\n    ));\n\n    const useStyles = makeStyles({\n        card: {\n            margin: 5,\n        },\n    });\n\n    const classes = useStyles();\n    const displayYear = `Year: ${year}`;\n    const displaySet = `Set #: ${setNumber}`;\n    const displayPiece = `Pieces: ${pieces}`;\n\n    return (\n        <div>\n            { props.item ? (\n                <Card className={classes.card}>\n                    <CardMedia \n                        style={{ paddingTop: '60%', height: '200px', textAlign: 'top' }}    \n                        image={imageSource}\n                        title={id}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant='h5' component='h2'>{name}</Typography>\n                        <Typography component='p'>{displayYear}</Typography>\n                        <Typography component='p'>{displaySet} - {displayPiece}</Typography>\n                        {minifiguresDisplay}\n                    </CardContent>\n                    <CardActions>\n                        <Button size='small' color='primary' href={imageURL} target='_blank'>Image +</Button>\n                    </CardActions>\n                </Card>\n            ) : null}\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}