{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/components/collectionList.js\";\nimport React, { Component } from 'react';\nimport { ClientData } from 'shared/api/clientData';\nimport Typography from '@material-ui/core/Typography';\nimport { CollectionTable } from 'components/common/displayData/table/table';\nimport { DATA_ATTRIBUTES, SORT_DIRECTION, FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\nconst PROD_COMMONS = DATA_ATTRIBUTES.PROD_COMMONS,\n      PROD_ACTION_FIGURES = DATA_ATTRIBUTES.PROD_ACTION_FIGURES,\n      PROD_MOVIES = DATA_ATTRIBUTES.PROD_MOVIES,\n      PROD_VIDEO_GAMES = DATA_ATTRIBUTES.PROD_VIDEO_GAMES;\nexport class CollectionList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createRequest = (productType, filterAttribute, filterValue, productLine) => {\n      return {\n        productLine: productLine,\n        productType: productType,\n        filter: {\n          filterAttribute: filterAttribute ? filterAttribute : undefined,\n          value: filterValue ? filterValue : undefined\n        }\n      };\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          cardView = _this$props.cardView,\n          displayedData = _this$props.displayedData,\n          productType = _this$props.productType,\n          tableView = _this$props.tableView,\n          realImages = _this$props.realImages,\n          sortDirection = _this$props.sortDirection,\n          demoMode = _this$props.demoMode;\n    const displayFilterGroup = productType === ACTION_FIGURES ? this.actionFigureFilterGroup() : this.state.filterGroup;\n    const collectionView = tableView ? React.createElement(CollectionTable, {\n      collectionData: displayedData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : React.createElement(Cards, {\n      collectionData: displayedData,\n      realImages: realImages,\n      productType: productType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, null, React.createElement(CommonButtonCollection, {\n      toggleView: this.toggleView,\n      toggleRealImages: this.props.toggleRealImages,\n      realImages: realImages,\n      productType: productType,\n      handleSortChange: this.handleSortChangeFromFilter,\n      sortDirection: sortDirection,\n      toggleSortDirection: this.toggleSort,\n      cardView: cardView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(CommonFilterCollection, {\n      handleProductType: this.handleProductType,\n      filterGroup: displayFilterGroup,\n      demoMode: demoMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), displayedData ? collectionView : 'No Collection Found', React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, displayedData.length));\n  }\n\n}","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/components/collectionList.js"],"names":["React","Component","ClientData","Typography","CollectionTable","DATA_ATTRIBUTES","SORT_DIRECTION","FILTER_LABELS","PROD_COMMONS","PROD_ACTION_FIGURES","PROD_MOVIES","PROD_VIDEO_GAMES","CollectionList","createRequest","productType","filterAttribute","filterValue","productLine","filter","undefined","value","render","props","cardView","displayedData","tableView","realImages","sortDirection","demoMode","displayFilterGroup","ACTION_FIGURES","actionFigureFilterGroup","state","filterGroup","collectionView","toggleView","toggleRealImages","handleSortChangeFromFilter","toggleSort","handleProductType","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,eAAT,QAAgC,2CAAhC;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,aAA1C,QAA+D,2CAA/D;MAGIC,Y,GAIAH,e,CAJAG,Y;MACAC,mB,GAGAJ,e,CAHAI,mB;MACAC,W,GAEAL,e,CAFAK,W;MACAC,gB,GACAN,e,CADAM,gB;AAGJ,OAAO,MAAMC,cAAN,SAA6BX,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAG1CY,aAH0C,GAG1B,CAACC,WAAD,EAAcC,eAAd,EAA+BC,WAA/B,EAA4CC,WAA5C,KAA4D;AACxE,aAAO;AACHA,QAAAA,WAAW,EAAEA,WADV;AAEHH,QAAAA,WAAW,EAAEA,WAFV;AAGHI,QAAAA,MAAM,EAAE;AACJH,UAAAA,eAAe,EAAEA,eAAe,GAAGA,eAAH,GAAqBI,SADjD;AAEJC,UAAAA,KAAK,EAAEJ,WAAW,GAAGA,WAAH,GAAiBG;AAF/B;AAHL,OAAP;AAQH,KAZyC;AAAA;;AAc1CE,EAAAA,MAAM,GAAG;AAAA,wBAUD,KAAKC,KAVJ;AAAA,UAGDC,QAHC,eAGDA,QAHC;AAAA,UAIDC,aAJC,eAIDA,aAJC;AAAA,UAKDV,WALC,eAKDA,WALC;AAAA,UAMDW,SANC,eAMDA,SANC;AAAA,UAODC,UAPC,eAODA,UAPC;AAAA,UAQDC,aARC,eAQDA,aARC;AAAA,UASDC,QATC,eASDA,QATC;AAYL,UAAMC,kBAAkB,GAAGf,WAAW,KAAKgB,cAAhB,GACrB,KAAKC,uBAAL,EADqB,GAErB,KAAKC,KAAL,CAAWC,WAFjB;AAIA,UAAMC,cAAc,GAAGT,SAAS,GACxB,oBAAC,eAAD;AAAiB,MAAA,cAAc,EAAED,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADwB,GAExB,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAEA,aAAvB;AAAsC,MAAA,UAAU,EAAEE,UAAlD;AAA8D,MAAA,WAAW,EAAEZ,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAIA,WACI,0CAEI,oBAAC,sBAAD;AACI,MAAA,UAAU,EAAE,KAAKqB,UADrB;AAEI,MAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWc,gBAFjC;AAGI,MAAA,UAAU,EAAEV,UAHhB;AAII,MAAA,WAAW,EAAEZ,WAJjB;AAKI,MAAA,gBAAgB,EAAE,KAAKuB,0BAL3B;AAMI,MAAA,aAAa,EAAEV,aANnB;AAOI,MAAA,mBAAmB,EAAE,KAAKW,UAP9B;AAQI,MAAA,QAAQ,EAAEf,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAaI,oBAAC,sBAAD;AACI,MAAA,iBAAiB,EAAE,KAAKgB,iBAD5B;AAEI,MAAA,WAAW,EAAEV,kBAFjB;AAGI,MAAA,QAAQ,EAAED,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAkBKJ,aAAa,GAAGU,cAAH,GAAoB,qBAlBtC,EAmBI,oBAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAsC,MAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDV,aAAa,CAACgB,MAApE,CAnBJ,CADJ;AAwBH;;AA1DyC","sourcesContent":["import React, { Component } from 'react';\nimport { ClientData } from 'shared/api/clientData';\nimport Typography from '@material-ui/core/Typography';\nimport { CollectionTable } from 'components/common/displayData/table/table';\nimport { DATA_ATTRIBUTES, SORT_DIRECTION, FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\n\nconst {\n    PROD_COMMONS,\n    PROD_ACTION_FIGURES,\n    PROD_MOVIES,\n    PROD_VIDEO_GAMES,\n} = DATA_ATTRIBUTES;\n\nexport class CollectionList extends Component {\n\n\n    createRequest = (productType, filterAttribute, filterValue, productLine) => {\n        return {\n            productLine: productLine,\n            productType: productType,\n            filter: {\n                filterAttribute: filterAttribute ? filterAttribute : undefined,\n                value: filterValue ? filterValue : undefined,\n            },\n        };\n    }\n\n    render() {\n\n        const {\n            cardView,\n            displayedData,\n            productType,\n            tableView,\n            realImages,\n            sortDirection,\n            demoMode,\n        } = this.props;\n\n        const displayFilterGroup = productType === ACTION_FIGURES\n            ? this.actionFigureFilterGroup() \n            : this.state.filterGroup;\n\n        const collectionView = tableView \n            ?   <CollectionTable collectionData={displayedData}/>\n            :   <Cards collectionData={displayedData} realImages={realImages} productType={productType}/>;\n\n        return (\n            <>\n                {/* <Modal buttonName={'New Item'} customComp={<AddNewItemForm />}/> */}\n                <CommonButtonCollection \n                    toggleView={this.toggleView}\n                    toggleRealImages={this.props.toggleRealImages}\n                    realImages={realImages} \n                    productType={productType}\n                    handleSortChange={this.handleSortChangeFromFilter}\n                    sortDirection={sortDirection}\n                    toggleSortDirection={this.toggleSort}\n                    cardView={cardView}\n                />\n                <br/>\n                <CommonFilterCollection \n                    handleProductType={this.handleProductType}\n                    filterGroup={displayFilterGroup}\n                    demoMode={demoMode}\n                />\n                {displayedData ? collectionView : 'No Collection Found'}\n                <Typography gutterBottom variant='h5' component='h2'>{displayedData.length}</Typography>\n            </>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}