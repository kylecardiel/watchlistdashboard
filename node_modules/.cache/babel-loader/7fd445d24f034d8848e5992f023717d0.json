{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js\";\nimport React from 'react';\nimport MultiSelect from 'components/common/input/selects/multiSelect';\nimport { FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\nimport { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\nexport const AddNewItemForm = props => {\n  const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n\n  const handleChange = attributeValue => {\n    console.log(attributeValue);\n  };\n\n  const multiSelect = (inputLabel, list, handleChange) => {\n    return;\n    React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, props.inputLabel), React.createElement(Select, {\n      labelId: \"demo-mutiple-checkbox-label\",\n      id: \"demo-mutiple-checkbox\",\n      multiple: true,\n      value: attributeValue,\n      onChange: handleChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }),\n      renderValue: selected => selected.join(', '),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, props.list.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: attributeValue.indexOf(name) > -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })))));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SingleSelect, {\n    handleFilterChange: props.handleProductType,\n    inputLabel: FILTER_LABELS.PRODUCT_TYPE,\n    menuItems: DOMAIN.PRODUCT_TYPE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(SingleSelect, {\n    handleFilterChange: props.handleFilterChangeByContentSource,\n    inputLabel: FILTER_LABELS.SOURCE,\n    menuItems: DOMAIN.ALL_SOURCE_NAMES,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(SingleSelect, {\n    handleFilterChange: props.handleFilterChangeByCharacter,\n    inputLabel: FILTER_LABELS.CHARACTERS,\n    menuItems: DOMAIN.CHARACTER_NAMES,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(SingleSelect, {\n    handleFilterChange: props.handleFilterChangeByAssortment,\n    inputLabel: FILTER_LABELS.ASSORTMENT,\n    menuItems: assortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(MultiSelect, {\n    inputLabel: FILTER_LABELS.GROUP,\n    list: DOMAIN.GROUP_NAMES,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(MultiSelect, {\n    inputLabel: FILTER_LABELS.VERSIONS,\n    list: DOMAIN.VERSIONS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}; // id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// openComplete\n// quantity\n// versions\n// imageURL\n// assortment\n// group","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js"],"names":["React","MultiSelect","FILTER_LABELS","SingleSelect","DOMAIN","AddNewItemForm","props","assortOptions","GET_SPECIFIC_ASSORTMENT","productLine","handleChange","attributeValue","console","log","multiSelect","inputLabel","list","classes","formControl","selected","join","MenuProps","map","name","indexOf","handleProductType","PRODUCT_TYPE","handleFilterChangeByContentSource","SOURCE","ALL_SOURCE_NAMES","handleFilterChangeByCharacter","CHARACTERS","CHARACTER_NAMES","handleFilterChangeByAssortment","ASSORTMENT","GROUP","GROUP_NAMES","VERSIONS"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MultiSelect from 'components/common/input/selects/multiSelect';\nimport { FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\nimport { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\n\nexport const AddNewItemForm = props => {\n    const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n\n    const handleChange = attributeValue => {\n        console.log(attributeValue);\n    };\n\n    const multiSelect = (inputLabel, list, handleChange) => {\n        return \n        <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-checkbox-label\">{props.inputLabel}</InputLabel>\n            <Select\n                labelId=\"demo-mutiple-checkbox-label\"\n                id=\"demo-mutiple-checkbox\"\n                multiple\n                value={attributeValue}\n                onChange={handleChange}\n                input={<Input />}\n                renderValue={selected => selected.join(', ')}\n                MenuProps={MenuProps}\n            >\n                {props.list.map(name => (\n                    <MenuItem key={name} value={name}>\n                        <Checkbox checked={attributeValue.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    };\n\n\n    return (\n        <>\n            <SingleSelect \n                handleFilterChange={props.handleProductType} \n                inputLabel={FILTER_LABELS.PRODUCT_TYPE}\n                menuItems={DOMAIN.PRODUCT_TYPE}\n            />            \n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByContentSource} \n                inputLabel={FILTER_LABELS.SOURCE}\n                menuItems={DOMAIN.ALL_SOURCE_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByCharacter} \n                inputLabel={FILTER_LABELS.CHARACTERS}\n                menuItems={DOMAIN.CHARACTER_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByAssortment} \n                inputLabel={FILTER_LABELS.ASSORTMENT}\n                menuItems={assortOptions}\n            />\n            <MultiSelect inputLabel={FILTER_LABELS.GROUP} list={DOMAIN.GROUP_NAMES} handleChange={handleChange}/>\n            <MultiSelect inputLabel={FILTER_LABELS.VERSIONS} list={DOMAIN.VERSIONS}/>\n        </>\n    );\n};\n\n// id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// openComplete\n// quantity\n// versions\n// imageURL\n// assortment\n// group"]},"metadata":{},"sourceType":"module"}