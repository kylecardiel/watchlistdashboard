{"ast":null,"code":"import { getSortDirection, getDemoMode } from 'store/userSettings/userSettingsSelector';\nimport { addNotificationAction } from 'store/notifications/notificationActions';\nexport const TOGGLE_REAL_IMAGES = '[userSettings]TOGGLE_REAL_IMAGES';\nexport const toggleRealImages = isRealImage => ({\n  type: TOGGLE_REAL_IMAGES,\n  payload: isRealImage\n});\nexport const ENABLE_VIEW_TYPE_CARD = '[userSettings]ENABLE_VIEW_TYPE_CARD';\nexport const enableViewTypeCard = cardView => ({\n  type: ENABLE_VIEW_TYPE_CARD,\n  payload: cardView\n});\nexport const ENABLE_VIEW_TYPE_TABLE = '[userSettings]ENABLE_VIEW_TYPE_TABLE';\nexport const enableViewTypeTable = tableView => ({\n  type: ENABLE_VIEW_TYPE_TABLE,\n  payload: tableView\n});\nexport const TOGGLE_SORT_DIRECTION = '[userSettings]TOGGLE_SORT_DIRECTION';\n\nconst _toggleSortDirection = direction => ({\n  type: TOGGLE_SORT_DIRECTION,\n  payload: direction\n});\n\nexport const TOGGLE_DEMO_MODE = '[userSettings]TOGGLE_DEMO_MODE';\nexport const toggleDemoMode = () => (dispatch, getState) => {\n  dispatch(_toggleDemoMode());\n  const demoModeOn = getDemoMode(getState());\n  const message = !demoModeOn ? 'Demo Mode OFF' : 'Demo Mode ON';\n  dispatch(addNotificationAction(1, 'Info', message));\n};\n\nconst _toggleDemoMode = () => ({\n  type: TOGGLE_DEMO_MODE,\n  payload: ''\n});","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/store/userSettings/userSettingsActions.js"],"names":["getSortDirection","getDemoMode","addNotificationAction","TOGGLE_REAL_IMAGES","toggleRealImages","isRealImage","type","payload","ENABLE_VIEW_TYPE_CARD","enableViewTypeCard","cardView","ENABLE_VIEW_TYPE_TABLE","enableViewTypeTable","tableView","TOGGLE_SORT_DIRECTION","_toggleSortDirection","direction","TOGGLE_DEMO_MODE","toggleDemoMode","dispatch","getState","_toggleDemoMode","demoModeOn","message"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,yCAA9C;AACA,SAASC,qBAAT,QAAsC,yCAAtC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,kCAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAGC,WAAW,KAAK;AAC5CC,EAAAA,IAAI,EAAEH,kBADsC;AAE5CI,EAAAA,OAAO,EAAEF;AAFmC,CAAL,CAApC;AAKP,OAAO,MAAMG,qBAAqB,GAAG,qCAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AAC3CJ,EAAAA,IAAI,EAAEE,qBADqC;AAE3CD,EAAAA,OAAO,EAAEG;AAFkC,CAAL,CAAnC;AAKP,OAAO,MAAMC,sBAAsB,GAAG,sCAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAGC,SAAS,KAAK;AAC7CP,EAAAA,IAAI,EAAEK,sBADuC;AAE7CJ,EAAAA,OAAO,EAAEM;AAFoC,CAAL,CAArC;AAKP,OAAO,MAAMC,qBAAqB,GAAG,qCAA9B;;AAGP,MAAMC,oBAAoB,GAAGC,SAAS,KAAK;AACvCV,EAAAA,IAAI,EAAEQ,qBADiC;AAEvCP,EAAAA,OAAO,EAAES;AAF8B,CAAL,CAAtC;;AAKA,OAAO,MAAMC,gBAAgB,GAAG,gCAAzB;AACP,OAAO,MAAMC,cAAc,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxDD,EAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACA,QAAMC,UAAU,GAAGrB,WAAW,CAACmB,QAAQ,EAAT,CAA9B;AACA,QAAMG,OAAO,GAAG,CAACD,UAAD,GAAc,eAAd,GAAgC,cAAhD;AACAH,EAAAA,QAAQ,CAACjB,qBAAqB,CAAC,CAAD,EAAG,MAAH,EAAWqB,OAAX,CAAtB,CAAR;AACH,CALM;;AAOP,MAAMF,eAAe,GAAG,OAAO;AAC3Bf,EAAAA,IAAI,EAAEW,gBADqB;AAE3BV,EAAAA,OAAO,EAAE;AAFkB,CAAP,CAAxB","sourcesContent":["import { getSortDirection, getDemoMode } from 'store/userSettings/userSettingsSelector';\nimport { addNotificationAction } from 'store/notifications/notificationActions';\n\nexport const TOGGLE_REAL_IMAGES = '[userSettings]TOGGLE_REAL_IMAGES';\nexport const toggleRealImages = isRealImage => ({\n    type: TOGGLE_REAL_IMAGES,\n    payload: isRealImage,\n});\n\nexport const ENABLE_VIEW_TYPE_CARD = '[userSettings]ENABLE_VIEW_TYPE_CARD';\nexport const enableViewTypeCard = cardView => ({\n    type: ENABLE_VIEW_TYPE_CARD,\n    payload: cardView,\n});\n\nexport const ENABLE_VIEW_TYPE_TABLE = '[userSettings]ENABLE_VIEW_TYPE_TABLE';\nexport const enableViewTypeTable = tableView => ({\n    type: ENABLE_VIEW_TYPE_TABLE,\n    payload: tableView,\n});\n\nexport const TOGGLE_SORT_DIRECTION = '[userSettings]TOGGLE_SORT_DIRECTION';\n\n\nconst _toggleSortDirection = direction => ({\n    type: TOGGLE_SORT_DIRECTION,\n    payload: direction,\n});\n\nexport const TOGGLE_DEMO_MODE = '[userSettings]TOGGLE_DEMO_MODE';\nexport const toggleDemoMode = () => (dispatch, getState) => {\n    dispatch(_toggleDemoMode());\n    const demoModeOn = getDemoMode(getState());\n    const message = !demoModeOn ? 'Demo Mode OFF' : 'Demo Mode ON';\n    dispatch(addNotificationAction(1,'Info', message));\n};\n\nconst _toggleDemoMode = () => ({\n    type: TOGGLE_DEMO_MODE,\n    payload: '',\n});"]},"metadata":{},"sourceType":"module"}