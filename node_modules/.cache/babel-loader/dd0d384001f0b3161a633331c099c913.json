{"ast":null,"code":"import { toast as notificationCreator } from 'react-toastify';\nexport const ADD_NOTIFICATION = '[notifications]ADD_NOTIFICATION';\nexport const addNotificationAction = (id, priority, type, message) => dispatch => {\n  const action = {\n    id: id,\n    priority: priority,\n    type: type,\n    message: message\n  }; // dispatch(_AddNotificationAction(action));\n\n  displayNotification(action);\n}; // const _addNotificationAction = action => ({\n//     type: ADD_NOTIFICATION,\n//     payload: action,\n// });\n\nconst displayNotification = notification => {\n  switch (notification.type) {\n    case 'Info':\n      notificationCreator.info(\"Info Notification !\", {\n        position: notificationCreator.POSITION.TOP_RIGHT\n      });\n      break;\n\n    default:\n      break;\n  }\n};","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/store/notifications/notificationActions.js"],"names":["toast","notificationCreator","ADD_NOTIFICATION","addNotificationAction","id","priority","type","message","dispatch","action","displayNotification","notification","info","position","POSITION","TOP_RIGHT"],"mappings":"AAAA,SAASA,KAAK,IAAIC,mBAAlB,QAA6C,gBAA7C;AAEA,OAAO,MAAMC,gBAAgB,GAAG,iCAAzB;AACP,OAAO,MAAMC,qBAAqB,GAAG,CAACC,EAAD,EAAKC,QAAL,EAAeC,IAAf,EAAqBC,OAArB,KAAiCC,QAAQ,IAAI;AAC9E,QAAMC,MAAM,GAAG;AACXL,IAAAA,EAAE,EAAEA,EADO;AAEXC,IAAAA,QAAQ,EAAEA,QAFC;AAGXC,IAAAA,IAAI,EAAEA,IAHK;AAIXC,IAAAA,OAAO,EAAEA;AAJE,GAAf,CAD8E,CAO9E;;AACAG,EAAAA,mBAAmB,CAACD,MAAD,CAAnB;AACH,CATM,C,CAWP;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,GAAGC,YAAY,IAAI;AACxC,UAAQA,YAAY,CAACL,IAArB;AACA,SAAK,MAAL;AACIL,MAAAA,mBAAmB,CAACW,IAApB,CAAyB,qBAAzB,EAAgD;AAC5CC,QAAAA,QAAQ,EAAEZ,mBAAmB,CAACa,QAApB,CAA6BC;AADK,OAAhD;AAGA;;AACJ;AACI;AAPJ;AASH,CAVD","sourcesContent":["import { toast as notificationCreator } from 'react-toastify';\n\nexport const ADD_NOTIFICATION = '[notifications]ADD_NOTIFICATION';\nexport const addNotificationAction = (id, priority, type, message) => dispatch => {\n    const action = {\n        id: id, \n        priority: priority, \n        type: type, \n        message: message,\n    };\n    // dispatch(_AddNotificationAction(action));\n    displayNotification(action);\n};\n\n// const _addNotificationAction = action => ({\n//     type: ADD_NOTIFICATION,\n//     payload: action,\n// });\n\nconst displayNotification = notification => {\n    switch (notification.type) {\n    case 'Info':\n        notificationCreator.info(\"Info Notification !\", {\n            position: notificationCreator.POSITION.TOP_RIGHT,\n        });\n        break;\n    default:\n        break;\n    }\n};"]},"metadata":{},"sourceType":"module"}