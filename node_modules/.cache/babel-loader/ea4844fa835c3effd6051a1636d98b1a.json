{"ast":null,"code":"import * as actions from 'store/dataSet/dataSetActions';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { initialState } from 'store/initialState';\nexport const dataSet = (state = initialState.dataSet, action) => {\n  switch (action.type) {\n    case actions.SET_DISPLAY_DATA:\n      {\n        return Array.isArray(action.payload) ? updateState(state, 'displayedData', action.payload) : state;\n      }\n\n    case actions.REMOVE_SYMBOL:\n      {\n        let cloneState = cloneDeep(state);\n        let update = cloneState.displayedData.filter(function (element) {\n          return element['symbol'] == !action.payload;\n        });\n        console.log(update);\n        return {\n          displayedData: []\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst updateState = (state, attribute, payload) => {\n  const cloneState = cloneDeep(state);\n  cloneState[attribute] = payload;\n  return cloneState;\n};","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/store/dataSet/dataSetReducer.js"],"names":["actions","cloneDeep","initialState","dataSet","state","action","type","SET_DISPLAY_DATA","Array","isArray","payload","updateState","REMOVE_SYMBOL","cloneState","update","displayedData","filter","element","console","log","attribute"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAY,CAACC,OAAtB,EAA+BE,MAA/B,KAA0C;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKN,OAAO,CAACO,gBAAb;AAA+B;AAC3B,eAAOC,KAAK,CAACC,OAAN,CAAcJ,MAAM,CAACK,OAArB,IACDC,WAAW,CAACP,KAAD,EAAQ,eAAR,EAAyBC,MAAM,CAACK,OAAhC,CADV,GAEDN,KAFN;AAGH;;AACD,SAAKJ,OAAO,CAACY,aAAb;AAA4B;AACxB,YAAIC,UAAU,GAAGZ,SAAS,CAACG,KAAD,CAA1B;AACA,YAAIU,MAAM,GAAGD,UAAU,CAACE,aAAX,CAAyBC,MAAzB,CAAgC,UAAUC,OAAV,EAAmB;AAC5D,iBAAOA,OAAO,CAAC,QAAD,CAAP,IAAoB,CAAEZ,MAAM,CAACK,OAApC;AACH,SAFY,CAAb;AAIAQ,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AAIA,eAAO;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAP;AACH;;AACD;AACI,aAAOX,KAAP;AAnBJ;AAqBH,CAtBM;;AAwBP,MAAMO,WAAW,GAAG,CAACP,KAAD,EAAQgB,SAAR,EAAmBV,OAAnB,KAA+B;AAC/C,QAAMG,UAAU,GAAGZ,SAAS,CAACG,KAAD,CAA5B;AACAS,EAAAA,UAAU,CAACO,SAAD,CAAV,GAAwBV,OAAxB;AACA,SAAOG,UAAP;AACH,CAJD","sourcesContent":["import * as actions from 'store/dataSet/dataSetActions';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { initialState } from 'store/initialState';\n\nexport const dataSet = (state = initialState.dataSet, action) => {\n    switch (action.type) {\n    case actions.SET_DISPLAY_DATA: {\n        return Array.isArray(action.payload)\n            ? updateState(state, 'displayedData', action.payload)\n            : state;\n    }\n    case actions.REMOVE_SYMBOL: {\n        let cloneState = cloneDeep(state);\n        let update = cloneState.displayedData.filter(function (element) {\n            return element['symbol'] ==! action.payload;\n        })\n\n        console.log(update)\n\n\n\n        return { displayedData: [] };\n    }\n    default:\n        return state;\n    }\n};\n\nconst updateState = (state, attribute, payload) => {\n    const cloneState = cloneDeep(state);\n    cloneState[attribute] = payload;\n    return cloneState;\n};"]},"metadata":{},"sourceType":"module"}