{"ast":null,"code":"import _slicedToArray from \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js\";\nimport React from 'react';\nimport MultiSelect from 'components/common/input/selects/multiSelect';\nimport { FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\nimport { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nexport const AddNewItemForm = props => {\n  const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n  const classes = useStyles();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        attributeValue = _React$useState2[0],\n        setAttributeValue = _React$useState2[1];\n\n  const handleChange = event => {\n    setAttributeValue(event.target.value);\n  };\n\n  const multiSelect = (inputLabel, list, handleChange) => {\n    return React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      id: \"demo-mutiple-checkbox-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, props.inputLabel), React.createElement(Select, {\n      labelId: \"demo-mutiple-checkbox-label\",\n      id: \"demo-mutiple-checkbox\",\n      multiple: true,\n      value: attributeValue,\n      onChange: handleChange,\n      input: React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }),\n      renderValue: selected => selected.join(', '),\n      MenuProps: MenuProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, props.list.map(name => React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: attributeValue.indexOf(name) > -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))));\n  };\n\n  const groupSelect = () => {\n    return multiSelect;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SingleSelect, {\n    handleFilterChange: props.handleProductType,\n    inputLabel: FILTER_LABELS.PRODUCT_TYPE,\n    menuItems: DOMAIN.PRODUCT_TYPE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(SingleSelect, {\n    handleFilterChange: props.handleFilterChangeByContentSource,\n    inputLabel: FILTER_LABELS.SOURCE,\n    menuItems: DOMAIN.ALL_SOURCE_NAMES,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(SingleSelect, {\n    handleFilterChange: props.handleFilterChangeByCharacter,\n    inputLabel: FILTER_LABELS.CHARACTERS,\n    menuItems: DOMAIN.CHARACTER_NAMES,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(SingleSelect, {\n    handleFilterChange: props.handleFilterChangeByAssortment,\n    inputLabel: FILTER_LABELS.ASSORTMENT,\n    menuItems: assortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(MultiSelect, {\n    inputLabel: FILTER_LABELS.GROUP,\n    list: DOMAIN.GROUP_NAMES,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(MultiSelect, {\n    inputLabel: FILTER_LABELS.VERSIONS,\n    list: DOMAIN.VERSIONS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}; // id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// openComplete\n// quantity\n// versions\n// imageURL\n// assortment\n// group","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js"],"names":["React","MultiSelect","FILTER_LABELS","SingleSelect","DOMAIN","makeStyles","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","AddNewItemForm","props","assortOptions","GET_SPECIFIC_ASSORTMENT","productLine","classes","useStyles","useState","attributeValue","setAttributeValue","handleChange","event","target","value","multiSelect","inputLabel","list","formControl","selected","join","MenuProps","map","name","indexOf","groupSelect","handleProductType","PRODUCT_TYPE","handleFilterChangeByContentSource","SOURCE","ALL_SOURCE_NAMES","handleFilterChangeByCharacter","CHARACTERS","CHARACTER_NAMES","handleFilterChangeByAssortment","ASSORTMENT","GROUP","GROUP_NAMES","VERSIONS","theme","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","PaperProps","style","maxHeight","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,0CAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC,QAAMC,aAAa,GAAGX,MAAM,CAACY,uBAAP,CAA+BF,KAAK,CAACG,WAArC,CAAtB;AAEA,QAAMC,OAAO,GAAGC,SAAS,EAAzB;;AAHmC,0BAISnB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAJT;AAAA;AAAA,QAI5BC,cAJ4B;AAAA,QAIZC,iBAJY;;AAMnC,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BF,IAAAA,iBAAiB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,IAAb,EAAmBN,YAAnB,KAAoC;AACpD,WAAQ,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEL,OAAO,CAACY,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8ChB,KAAK,CAACc,UAApD,CADI,EAEJ,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,6BADZ;AAEI,MAAA,EAAE,EAAC,uBAFP;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,KAAK,EAAEP,cAJX;AAKI,MAAA,QAAQ,EAAEE,YALd;AAMI,MAAA,KAAK,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANX;AAOI,MAAA,WAAW,EAAEQ,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAP7B;AAQI,MAAA,SAAS,EAAEC,SARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKnB,KAAK,CAACe,IAAN,CAAWK,GAAX,CAAeC,IAAI,IAChB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAf;AAAqB,MAAA,KAAK,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEd,cAAc,CAACe,OAAf,CAAuBD,IAAvB,IAA+B,CAAC,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,CAVL,CAFI,CAAR;AAoBH,GArBD;;AAwBA,QAAME,WAAW,GAAG,MAAM;AACtB,WAAOV,WAAP;AACH,GAFD;;AAIA,SACI,0CACI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAEb,KAAK,CAACwB,iBAD9B;AAEI,IAAA,UAAU,EAAEpC,aAAa,CAACqC,YAF9B;AAGI,IAAA,SAAS,EAAEnC,MAAM,CAACmC,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAEzB,KAAK,CAAC0B,iCAD9B;AAEI,IAAA,UAAU,EAAEtC,aAAa,CAACuC,MAF9B;AAGI,IAAA,SAAS,EAAErC,MAAM,CAACsC,gBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAWI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAE5B,KAAK,CAAC6B,6BAD9B;AAEI,IAAA,UAAU,EAAEzC,aAAa,CAAC0C,UAF9B;AAGI,IAAA,SAAS,EAAExC,MAAM,CAACyC,eAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAgBI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAE/B,KAAK,CAACgC,8BAD9B;AAEI,IAAA,UAAU,EAAE5C,aAAa,CAAC6C,UAF9B;AAGI,IAAA,SAAS,EAAEhC,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAqBI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAEb,aAAa,CAAC8C,KAAvC;AAA8C,IAAA,IAAI,EAAE5C,MAAM,CAAC6C,WAA3D;AAAwE,IAAA,YAAY,EAAE1B,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EAsBI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAErB,aAAa,CAACgD,QAAvC;AAAiD,IAAA,IAAI,EAAE9C,MAAM,CAAC8C,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AA0BH,CAhEM;AAmEP,MAAM/B,SAAS,GAAGd,UAAU,CAAC8C,KAAK,KAAK;AACnCrB,EAAAA,WAAW,EAAE;AACTsB,IAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE,GAFD;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADsB;AAMnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GAN4B;AAUnCC,EAAAA,IAAI,EAAE;AACFP,IAAAA,MAAM,EAAE;AADN,GAV6B;AAanCQ,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAEV,KAAK,CAACE,OAAN,CAAc,CAAd;AADN;AAb0B,CAAL,CAAN,CAA5B;AAkBA,MAAMS,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAM9B,SAAS,GAAG;AACd+B,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEJ,WAAW,GAAG,GAAd,GAAoBC,gBAD5B;AAEHI,MAAAA,KAAK,EAAE;AAFJ;AADC;AADE,CAAlB,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport MultiSelect from 'components/common/input/selects/multiSelect';\nimport { FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\nimport { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const AddNewItemForm = props => {\n    const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n\n    const classes = useStyles();\n    const [attributeValue, setAttributeValue] = React.useState([]);\n\n    const handleChange = event => {\n        setAttributeValue(event.target.value);\n    };\n\n    const multiSelect = (inputLabel, list, handleChange) => {\n        return  <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-checkbox-label\">{props.inputLabel}</InputLabel>\n            <Select\n                labelId=\"demo-mutiple-checkbox-label\"\n                id=\"demo-mutiple-checkbox\"\n                multiple\n                value={attributeValue}\n                onChange={handleChange}\n                input={<Input />}\n                renderValue={selected => selected.join(', ')}\n                MenuProps={MenuProps}\n            >\n                {props.list.map(name => (\n                    <MenuItem key={name} value={name}>\n                        <Checkbox checked={attributeValue.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    };\n\n\n    const groupSelect = () => {\n        return multiSelect\n    }\n\n    return (\n        <>\n            <SingleSelect \n                handleFilterChange={props.handleProductType} \n                inputLabel={FILTER_LABELS.PRODUCT_TYPE}\n                menuItems={DOMAIN.PRODUCT_TYPE}\n            />            \n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByContentSource} \n                inputLabel={FILTER_LABELS.SOURCE}\n                menuItems={DOMAIN.ALL_SOURCE_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByCharacter} \n                inputLabel={FILTER_LABELS.CHARACTERS}\n                menuItems={DOMAIN.CHARACTER_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByAssortment} \n                inputLabel={FILTER_LABELS.ASSORTMENT}\n                menuItems={assortOptions}\n            />\n            <MultiSelect inputLabel={FILTER_LABELS.GROUP} list={DOMAIN.GROUP_NAMES} handleChange={handleChange}/>\n            <MultiSelect inputLabel={FILTER_LABELS.VERSIONS} list={DOMAIN.VERSIONS}/>\n        </>\n    );\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\n\n// id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// openComplete\n// quantity\n// versions\n// imageURL\n// assortment\n// group"]},"metadata":{},"sourceType":"module"}