{"ast":null,"code":"import _slicedToArray from \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/common/input/selects/multiSelect.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        personName = _React$useState2[0],\n        setPersonName = _React$useState2[1];\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const options = event.target.options;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-name-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Select, {\n    labelId: \"demo-mutiple-name-label\",\n    id: \"demo-mutiple-name\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-checkbox-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Tag\"), React.createElement(Select, {\n    labelId: \"demo-mutiple-checkbox-label\",\n    id: \"demo-mutiple-checkbox\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: personName.indexOf(name) > -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Chip\"), React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }),\n    renderValue: selected => React.createElement(\"div\", {\n      className: classes.chips,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, selected.map(value => React.createElement(Chip, {\n      key: value,\n      label: value,\n      className: classes.chip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, name)))), React.createElement(FormControl, {\n    className: clsx(classes.formControl, classes.noLabel),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Select, {\n    multiple: true,\n    displayEmpty: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }),\n    renderValue: selected => {\n      if (selected.length === 0) {\n        return React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"Placeholder\");\n      }\n\n      return selected.join(', ');\n    },\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    disabled: true,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Placeholder\")), names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"select-multiple-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Native\"), React.createElement(Select, {\n    multiple: true,\n    native: true,\n    value: personName,\n    onChange: handleChangeMultiple,\n    inputProps: {\n      id: 'select-multiple-native'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, names.map(name => React.createElement(\"option\", {\n    key: name,\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, name)))));\n}","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/common/input/selects/multiSelect.js"],"names":["React","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","classes","useState","setPersonName","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","map","join","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst names = [\n    'Oliver Hansen',\n    'Van Henry',\n    'April Tucker',\n    'Ralph Hubbard',\n    'Omar Alexander',\n    'Carlos Abbott',\n    'Miriam Wagner',\n    'Bradley Wilkerson',\n    'Virginia Andrews',\n    'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n      personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n}\n\nexport default function MultipleSelect() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [personName, setPersonName] = React.useState([]);\n\n    const handleChange = event => {\n        setPersonName(event.target.value);\n    };\n\n    const handleChangeMultiple = event => {\n        const { options } = event.target;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n            if (options[i].selected) {\n                value.push(options[i].value);\n            }\n        }\n        setPersonName(value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-name-label\"\n                    id=\"demo-mutiple-name\"\n                    multiple\n                    value={personName}\n                    onChange={handleChange}\n                    input={<Input />}\n                    MenuProps={MenuProps}\n                >\n                    {names.map(name => (\n                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n                            {name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-mutiple-checkbox-label\">Tag</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-checkbox-label\"\n                    id=\"demo-mutiple-checkbox\"\n                    multiple\n                    value={personName}\n                    onChange={handleChange}\n                    input={<Input />}\n                    renderValue={selected => selected.join(', ')}\n                    MenuProps={MenuProps}\n                >\n                    {names.map(name => (\n                        <MenuItem key={name} value={name}>\n                            <Checkbox checked={personName.indexOf(name) > -1} />\n                            <ListItemText primary={name} />\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\n                <Select\n                    labelId=\"demo-mutiple-chip-label\"\n                    id=\"demo-mutiple-chip\"\n                    multiple\n                    value={personName}\n                    onChange={handleChange}\n                    input={<Input id=\"select-multiple-chip\" />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {names.map(name => (\n                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n                            {name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            <FormControl className={clsx(classes.formControl, classes.noLabel)}>\n                <Select\n                    multiple\n                    displayEmpty\n                    value={personName}\n                    onChange={handleChange}\n                    input={<Input />}\n                    renderValue={selected => {\n                        if (selected.length === 0) {\n                            return <em>Placeholder</em>;\n                        }\n\n                        return selected.join(', ');\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    <MenuItem disabled value=\"\">\n                        <em>Placeholder</em>\n                    </MenuItem>\n                    {names.map(name => (\n                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n                            {name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel shrink htmlFor=\"select-multiple-native\">\n          Native\n                </InputLabel>\n                <Select\n                    multiple\n                    native\n                    value={personName}\n                    onChange={handleChangeMultiple}\n                    inputProps={{\n                        id: 'select-multiple-native',\n                    }}\n                >\n                    {names.map(name => (\n                        <option key={name} value={name}>\n                            {name}\n                        </option>\n                    ))}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}