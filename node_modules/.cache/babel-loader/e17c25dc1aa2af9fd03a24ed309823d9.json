{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js\";\nimport React, { useState } from 'react'; // import MultiSelect from 'components/common/input/selects/multiSelect';\n\nimport { FILTER_LABELS, ALL_ACTION_FIGURE_ATTRIBUTES } from 'shared/constants/stringConstantsSelectors';\nimport { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\nimport { makeStyles } from '@material-ui/core/styles'; // import Input from '@material-ui/core/Input';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormControl from '@material-ui/core/FormControl';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Select from '@material-ui/core/Select';\n// import Checkbox from '@material-ui/core/Checkbox';\n\nexport const AddNewItemForm = props => {\n  // const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n  // const classes = useStyles();\n  // const [attributeValue, setAttributeValue] = useState([]);\n  // const handleChange = event => {\n  //     setAttributeValue(event.target.value);\n  // };\n  // const multiSelect = (inputLabel, list, handleChange) => {\n  //     return  <FormControl className={classes.formControl}>\n  //         <InputLabel id=\"demo-mutiple-checkbox-label\">{inputLabel}</InputLabel>\n  //         <Select\n  //             labelId=\"demo-mutiple-checkbox-label\"\n  //             id=\"demo-mutiple-checkbox\"\n  //             multiple\n  //             value={attributeValue}\n  //             onChange={handleChange}\n  //             input={<Input />}\n  //             renderValue={selected => selected.join(', ')}\n  //             MenuProps={MenuProps}\n  //         >\n  //             {list.map(name => (\n  //                 <MenuItem key={name} value={name}>\n  //                     <Checkbox checked={attributeValue.indexOf(name) > -1} />\n  //                     <ListItemText primary={name} />\n  //                 </MenuItem>\n  //             ))}\n  //         </Select>\n  //     </FormControl>;\n  // };\n  // const groupSelect = () => {\n  //     return multiSelect(FILTER_LABELS.GROUP, DOMAIN.GROUP_NAMES, handleChange);\n  // };\n  return React.createElement(React.Fragment, null, React.createElement(SingleSelect, {\n    handleFilterChange: props.handleProductType,\n    inputLabel: FILTER_LABELS.PRODUCT_TYPE,\n    menuItems: DOMAIN.PRODUCT_TYPE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n}; // const useStyles = makeStyles(theme => ({\n//     formControl: {\n//         margin: theme.spacing(1),\n//         minWidth: 120,\n//         maxWidth: 300,\n//     },\n//     chips: {\n//         display: 'flex',\n//         flexWrap: 'wrap',\n//     },\n//     chip: {\n//         margin: 2,\n//     },\n//     noLabel: {\n//         marginTop: theme.spacing(3),\n//     },\n// }));\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//     PaperProps: {\n//         style: {\n//             maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//             width: 250,\n//         },\n//     },\n// };\n// id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// nib ...\n// openComplete ...\n// openIncomplete ...\n// quantity ...\n// versions\n// imageURL ...\n// assortment\n// group","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/domain/input/forms/addNewItemForm.js"],"names":["React","useState","FILTER_LABELS","ALL_ACTION_FIGURE_ATTRIBUTES","SingleSelect","DOMAIN","makeStyles","AddNewItemForm","props","handleProductType","PRODUCT_TYPE"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,aAAT,EAAwBC,4BAAxB,QAA4D,2CAA5D;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,0CAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACnC;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA,SACI,0CACI,oBAAC,YAAD;AACI,IAAA,kBAAkB,EAAEA,KAAK,CAACC,iBAD9B;AAEI,IAAA,UAAU,EAAEP,aAAa,CAACQ,YAF9B;AAGI,IAAA,SAAS,EAAEL,MAAM,CAACK,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AA4BH,CAnEM,C,CAsEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\n// import MultiSelect from 'components/common/input/selects/multiSelect';\nimport { FILTER_LABELS, ALL_ACTION_FIGURE_ATTRIBUTES } from 'shared/constants/stringConstantsSelectors';\nimport { SingleSelect } from 'components/common/input/selects/singleSelect';\nimport * as DOMAIN from 'shared/constants/domainConstantSelectors';\n\nimport { makeStyles } from '@material-ui/core/styles';\n// import Input from '@material-ui/core/Input';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormControl from '@material-ui/core/FormControl';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Select from '@material-ui/core/Select';\n// import Checkbox from '@material-ui/core/Checkbox';\n\nexport const AddNewItemForm = props => {\n    // const assortOptions = DOMAIN.GET_SPECIFIC_ASSORTMENT(props.productLine);\n\n    // const classes = useStyles();\n    // const [attributeValue, setAttributeValue] = useState([]);\n\n    // const handleChange = event => {\n    //     setAttributeValue(event.target.value);\n    // };\n\n    // const multiSelect = (inputLabel, list, handleChange) => {\n    //     return  <FormControl className={classes.formControl}>\n    //         <InputLabel id=\"demo-mutiple-checkbox-label\">{inputLabel}</InputLabel>\n    //         <Select\n    //             labelId=\"demo-mutiple-checkbox-label\"\n    //             id=\"demo-mutiple-checkbox\"\n    //             multiple\n    //             value={attributeValue}\n    //             onChange={handleChange}\n    //             input={<Input />}\n    //             renderValue={selected => selected.join(', ')}\n    //             MenuProps={MenuProps}\n    //         >\n    //             {list.map(name => (\n    //                 <MenuItem key={name} value={name}>\n    //                     <Checkbox checked={attributeValue.indexOf(name) > -1} />\n    //                     <ListItemText primary={name} />\n    //                 </MenuItem>\n    //             ))}\n    //         </Select>\n    //     </FormControl>;\n    // };\n\n\n    // const groupSelect = () => {\n    //     return multiSelect(FILTER_LABELS.GROUP, DOMAIN.GROUP_NAMES, handleChange);\n    // };\n\n\n    return (\n        <>\n            <SingleSelect \n                handleFilterChange={props.handleProductType} \n                inputLabel={FILTER_LABELS.PRODUCT_TYPE}\n                menuItems={DOMAIN.PRODUCT_TYPE}\n            /> \n            {/* {groupSelect()} */}\n            {/*            \n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByContentSource} \n                inputLabel={FILTER_LABELS.SOURCE}\n                menuItems={DOMAIN.ALL_SOURCE_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByCharacter} \n                inputLabel={FILTER_LABELS.CHARACTERS}\n                menuItems={DOMAIN.CHARACTER_NAMES}\n            />\n            <SingleSelect \n                handleFilterChange={props.handleFilterChangeByAssortment} \n                inputLabel={FILTER_LABELS.ASSORTMENT}\n                menuItems={assortOptions}\n            />\n            <MultiSelect inputLabel={FILTER_LABELS.GROUP} list={DOMAIN.GROUP_NAMES} handleChange={handleChange}/>\n            <MultiSelect inputLabel={FILTER_LABELS.VERSIONS} list={DOMAIN.VERSIONS}/> */}\n        </>\n    );\n};\n\n\n// const useStyles = makeStyles(theme => ({\n//     formControl: {\n//         margin: theme.spacing(1),\n//         minWidth: 120,\n//         maxWidth: 300,\n//     },\n//     chips: {\n//         display: 'flex',\n//         flexWrap: 'wrap',\n//     },\n//     chip: {\n//         margin: 2,\n//     },\n//     noLabel: {\n//         marginTop: theme.spacing(3),\n//     },\n// }));\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//     PaperProps: {\n//         style: {\n//             maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//             width: 250,\n//         },\n//     },\n// };\n\n\n// id\n// name\n// additionalNameDetails\n// movieTv\n// seriesNumber\n// nib ...\n// openComplete ...\n// openIncomplete ...\n// quantity ...\n// versions\n// imageURL ...\n// assortment\n// group"]},"metadata":{},"sourceType":"module"}