{"ast":null,"code":"import reduce from 'lodash/reduce';\nexport class AppHotKeys {}\nAppHotKeys.KeyMapWithDetails = [{\n  name: 'HotKeys',\n  children: [{\n    name: 'DemoMode',\n    handler: 'toggleDemoMode',\n    hotKey: ['s x', 'x s']\n  }]\n}];\nAppHotKeys.KeyMap = reduce(AppHotKeys.KeyMapWithDetails.map(item => {\n  if ('children' in item) {\n    return reduce(item.children, (acc, child) => Object.assign(acc, {\n      [child.handler]: child.hotKey\n    }), {});\n  }\n\n  return {\n    [item.handler]: item.hotKey\n  };\n}), (acc, item) => Object.assign(acc, item), {});\n\nAppHotKeys.Handlers = (dispatch, getState) => {\n  const conditionalDispatch = fn => {\n    fn();\n    return false;\n  };\n\n  return {\n    'toggleDemoMode': () => {\n      dispatch(toggleDemoMode());\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/hotKeys/appHotKeys.js"],"names":["reduce","AppHotKeys","KeyMapWithDetails","name","children","handler","hotKey","KeyMap","map","item","acc","child","Object","assign","Handlers","dispatch","getState","conditionalDispatch","fn","toggleDemoMode"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,OAAO,MAAMC,UAAN,CAAiB;AAAXA,U,CACFC,iB,GAAoB,CACvB;AACIC,EAAAA,IAAI,EAAE,SADV;AAEIC,EAAAA,QAAQ,EAAE,CACN;AACID,IAAAA,IAAI,EAAE,UADV;AAEIE,IAAAA,OAAO,EAAE,gBAFb;AAGIC,IAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR;AAHZ,GADM;AAFd,CADuB,C;AADlBL,U,CAcFM,M,GAASP,MAAM,CAACC,UAAU,CAACC,iBAAX,CAA6BM,GAA7B,CAAiCC,IAAI,IAAI;AAC5D,MAAI,cAAcA,IAAlB,EAAwB;AACpB,WAAOT,MAAM,CAACS,IAAI,CAACL,QAAN,EAAgB,CAACM,GAAD,EAAMC,KAAN,KAAgBC,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmB;AAAC,OAACC,KAAK,CAACN,OAAP,GAAiBM,KAAK,CAACL;AAAxB,KAAnB,CAAhC,EAAqF,EAArF,CAAb;AACH;;AACD,SAAO;AAAC,KAACG,IAAI,CAACJ,OAAN,GAAgBI,IAAI,CAACH;AAAtB,GAAP;AACH,CALsB,CAAD,EAKlB,CAACI,GAAD,EAAMD,IAAN,KAAeG,MAAM,CAACC,MAAP,CAAcH,GAAd,EAAmBD,IAAnB,CALG,EAKuB,EALvB,C;;AAdbR,U,CAqBFa,Q,GAAW,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtC,QAAMC,mBAAmB,GAAGC,EAAE,IAAI;AAC1BA,IAAAA,EAAE;AACF,WAAO,KAAP;AACP,GAHD;;AAIA,SAAO;AACH,sBAAkB,MAAM;AACpBH,MAAAA,QAAQ,CAACI,cAAc,EAAf,CAAR;AACH;AAHE,GAAP;AAKH,C","sourcesContent":["import reduce from 'lodash/reduce';\n\nexport class AppHotKeys {\n    static KeyMapWithDetails = [\n        {\n            name: 'HotKeys',\n            children: [\n                {\n                    name: 'DemoMode',\n                    handler: 'toggleDemoMode',\n                    hotKey: ['s x', 'x s'],\n                },\n            ],\n        },\n    ];\n\n    static KeyMap = reduce(AppHotKeys.KeyMapWithDetails.map(item => {\n        if ('children' in item) {\n            return reduce(item.children, (acc, child) => Object.assign(acc, {[child.handler]: child.hotKey}), {});\n        }\n        return {[item.handler]: item.hotKey};\n    }), (acc, item) => Object.assign(acc, item), {});\n\n    static Handlers = (dispatch, getState) => {\n        const conditionalDispatch = fn => {\n                fn();\n                return false;\n        };\n        return {\n            'toggleDemoMode': () => {\n                dispatch(toggleDemoMode());\n            },\n        };\n    };\n}\n"]},"metadata":{},"sourceType":"module"}