{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/collectionList.js\";\nimport React, { Component } from 'react';\nimport { ClientData } from '../shared/api/clientData';\nimport Typography from '@material-ui/core/Typography';\nimport { CollectionTable } from './table/table';\nimport { Cards } from './domain/displayData/cards/cards';\nimport { DATA_ATTRIBUTES, SORT_DIRECTION } from '../shared/constants/stringConstantsSelectors';\nimport { PRODUCT_TYPE_DETAILS } from '../shared/constants/domainConstantSelectors';\nimport { ActionFigureFilters } from './buttons/filterButtonGroups/actionFigures/actionFigureFilters';\nimport { VideoGameFilters } from './buttons/filterButtonGroups/mediaFilters/videoGameFilters';\nimport { AllMovieFilters } from './buttons/filterButtonGroups/mediaFilters/allMovieFilters';\nimport { CommonButtonCollection } from './buttons/commonButtonCollection';\nimport { CommonFilterCollection } from './buttons/filterButtonGroups/commonFilterCollection';\nimport camelCase from 'lodash/camelCase';\nimport isEqual from 'lodash/isEqual';\nimport Modal from './modal/modal';\nconst ALL = PRODUCT_TYPE_DETAILS.ALL,\n      ACTION_FIGURES = PRODUCT_TYPE_DETAILS.ACTION_FIGURES,\n      LEGOS = PRODUCT_TYPE_DETAILS.LEGOS,\n      MOVIES = PRODUCT_TYPE_DETAILS.MOVIES,\n      VEHICLES = PRODUCT_TYPE_DETAILS.VEHICLES,\n      VIDEO_GAMES = PRODUCT_TYPE_DETAILS.VIDEO_GAMES;\nconst PROD_COMMONS = DATA_ATTRIBUTES.PROD_COMMONS,\n      PROD_ACTION_FIGURES = DATA_ATTRIBUTES.PROD_ACTION_FIGURES,\n      PROD_MOVIES = DATA_ATTRIBUTES.PROD_MOVIES,\n      PROD_VIDEO_GAMES = DATA_ATTRIBUTES.PROD_VIDEO_GAMES;\nexport class CollectionList extends Component {\n  constructor() {\n    super();\n\n    this.changeStateBasedOnProductType = (productType, filterGroup) => {\n      this.setState({\n        filterGroup: filterGroup\n      });\n      this.props.changeProductType(productType);\n    };\n\n    this.getAllBlackSeries = () => {\n      const allData = ClientData.getAllBlackSeriesData();\n      this.props.setDisplayData(allData);\n    };\n\n    this.handleProductLine = event => {\n      const changeProductLine = this.props.changeProductLine;\n      const productLine = event.target.value;\n      changeProductLine(productLine);\n      this.handleFilterChange(ACTION_FIGURES, null, null, productLine);\n    };\n\n    this.handleProductType = event => {\n      const productType = event.target.value;\n\n      switch (productType) {\n        case ALL:\n          this.changeStateBasedOnProductType(ALL, undefined);\n          this.handleFilterChange(ALL);\n          break;\n\n        case ACTION_FIGURES:\n          this.changeStateBasedOnProductType(ACTION_FIGURES, undefined);\n          this.props.setDisplayData([]);\n          break;\n\n        case LEGOS:\n          this.changeStateBasedOnProductType(LEGOS);\n          this.handleFilterChange(LEGOS);\n          break;\n\n        case MOVIES:\n          this.changeStateBasedOnProductType(MOVIES, this.movieFilterGroup());\n          this.handleFilterChange(MOVIES);\n          break;\n\n        case VEHICLES:\n          this.changeStateBasedOnProductType(VEHICLES);\n          this.handleFilterChange(VEHICLES);\n          break;\n\n        case VIDEO_GAMES:\n          this.changeStateBasedOnProductType(VIDEO_GAMES, this.videoGameFilterGroup());\n          this.handleFilterChange(VIDEO_GAMES);\n          break;\n\n        default:\n          this.changeStateBasedOnProductType(undefined, undefined);\n          this.props.setDisplayData([]);\n          break;\n      }\n    };\n\n    this.createRequest = (productType, filterAttribute, filterValue, productLine) => {\n      return {\n        productLine: productLine,\n        productType: productType,\n        filter: {\n          filterAttribute: filterAttribute ? filterAttribute : undefined,\n          value: filterValue ? filterValue : undefined\n        }\n      };\n    };\n\n    this.handleEventFilterChange = (event, productType, filterAttribute) => {\n      this.handleFilterChange(productType, filterAttribute, event.target.value, this.props.productLine);\n    };\n\n    this.handleFilterChange = (productType, filterAttribute, filterValue, productLine) => {\n      const request = this.createRequest(productType, filterAttribute, filterValue, productLine);\n      const collection = ClientData.handleDataRequests(request);\n      this.props.setDisplayData(collection);\n    };\n\n    this.actionFigureFilterGroup = () => {\n      return React.createElement(ActionFigureFilters, {\n        productLine: this.props.productLine,\n        handleProductLine: this.handleProductLine,\n        handleFilterChangeByAssortment: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.ASSORTMENT),\n        handleFilterChangeByCharacter: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_COMMONS.NAME),\n        handleFilterChangeByContentSource: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.MOVIE_TV),\n        handleFilterByGroup: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.GROUP),\n        handleFilterByVersion: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.VERSIONS),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    };\n\n    this.movieFilterGroup = () => {\n      return React.createElement(AllMovieFilters, {\n        handleFilterChangeByMovie: event => this.handleEventFilterChange(event, MOVIES, PROD_COMMONS.NAME),\n        handleFilterChangeByMovieSet: event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_SET),\n        handleFilterChangeByFormat: event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_FORMAT),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    };\n\n    this.videoGameFilterGroup = () => {\n      return React.createElement(VideoGameFilters, {\n        handleFilterChangeBySystem: event => this.handleEventFilterChange(event, VIDEO_GAMES, PROD_VIDEO_GAMES.SYSTEMS),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    };\n\n    this.toggleView = () => {\n      const _this$props = this.props,\n            cardView = _this$props.cardView,\n            enableViewTypeCard = _this$props.enableViewTypeCard,\n            enableViewTypeTable = _this$props.enableViewTypeTable;\n      cardView ? enableViewTypeTable() : enableViewTypeCard();\n    };\n\n    this.handleSortChange = newSortAttribute => {\n      const _this$props2 = this.props,\n            changeCurrentSortAttribute = _this$props2.changeCurrentSortAttribute,\n            displayedData = _this$props2.displayedData,\n            sortDirection = _this$props2.sortDirection,\n            sortAttribute = _this$props2.sortAttribute;\n      const sortAlpha = sortDirection === SORT_DIRECTION.ASC ? displayedData.sort((a, b) => a[newSortAttribute] > b[newSortAttribute] ? -1 : 1) : displayedData.sort((a, b) => a[newSortAttribute] > b[newSortAttribute] ? 1 : -1);\n      this.props.setDisplayData(sortAlpha);\n\n      if (!isEqual(newSortAttribute, sortAttribute)) {\n        changeCurrentSortAttribute(newSortAttribute);\n      }\n    };\n\n    this.handleSortChangeFromFilter = event => {\n      const sortAttribute = camelCase(event.target.value);\n      this.handleSortChange(sortAttribute);\n    };\n\n    this.toggleSort = () => {\n      const _this$props3 = this.props,\n            sortAttribute = _this$props3.sortAttribute,\n            toggleSortDirection = _this$props3.toggleSortDirection;\n      toggleSortDirection();\n      this.handleSortChange(sortAttribute);\n    };\n\n    this.state = {\n      filterGroup: undefined\n    };\n    this.changeStateBasedOnProductType = this.changeStateBasedOnProductType.bind(this);\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          displayedData = _this$props4.displayedData,\n          productType = _this$props4.productType,\n          tableView = _this$props4.tableView,\n          realImages = _this$props4.realImages,\n          sortDirection = _this$props4.sortDirection;\n    const displayFilterGroup = productType === ACTION_FIGURES ? this.actionFigureFilterGroup() : this.state.filterGroup;\n    const collectionView = tableView ? React.createElement(CollectionTable, {\n      collectionData: displayedData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }) : React.createElement(Cards, {\n      collectionData: displayedData,\n      realImages: realImages,\n      productType: productType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(CommonButtonCollection, {\n      toggleView: this.toggleView,\n      toggleRealImages: this.props.toggleRealImages,\n      realImages: realImages,\n      productType: productType,\n      handleSortChange: this.handleSortChangeFromFilter,\n      sortDirection: sortDirection,\n      toggleSortDirection: this.toggleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(CommonFilterCollection, {\n      handleProductType: this.handleProductType,\n      filterGroup: displayFilterGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), displayedData ? collectionView : 'No Collection Found', React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, displayedData.length));\n  }\n\n}","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/starwarscollection/src/components/collectionList.js"],"names":["React","Component","ClientData","Typography","CollectionTable","Cards","DATA_ATTRIBUTES","SORT_DIRECTION","PRODUCT_TYPE_DETAILS","ActionFigureFilters","VideoGameFilters","AllMovieFilters","CommonButtonCollection","CommonFilterCollection","camelCase","isEqual","Modal","ALL","ACTION_FIGURES","LEGOS","MOVIES","VEHICLES","VIDEO_GAMES","PROD_COMMONS","PROD_ACTION_FIGURES","PROD_MOVIES","PROD_VIDEO_GAMES","CollectionList","constructor","changeStateBasedOnProductType","productType","filterGroup","setState","props","changeProductType","getAllBlackSeries","allData","getAllBlackSeriesData","setDisplayData","handleProductLine","event","changeProductLine","productLine","target","value","handleFilterChange","handleProductType","undefined","movieFilterGroup","videoGameFilterGroup","createRequest","filterAttribute","filterValue","filter","handleEventFilterChange","request","collection","handleDataRequests","actionFigureFilterGroup","ASSORTMENT","NAME","MOVIE_TV","GROUP","VERSIONS","MOVIE_SET","MOVIE_FORMAT","SYSTEMS","toggleView","cardView","enableViewTypeCard","enableViewTypeTable","handleSortChange","newSortAttribute","changeCurrentSortAttribute","displayedData","sortDirection","sortAttribute","sortAlpha","ASC","sort","a","b","handleSortChangeFromFilter","toggleSort","toggleSortDirection","state","bind","render","tableView","realImages","displayFilterGroup","collectionView","toggleRealImages","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,8CAAhD;AACA,SAASC,oBAAT,QAAqC,6CAArC;AACA,SAASC,mBAAT,QAAoC,gEAApC;AACA,SAASC,gBAAT,QAAiC,4DAAjC;AACA,SAASC,eAAT,QAAgC,2DAAhC;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,SAASC,sBAAT,QAAuC,qDAAvC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;MAGIC,G,GAMAT,oB,CANAS,G;MACAC,c,GAKAV,oB,CALAU,c;MACAC,K,GAIAX,oB,CAJAW,K;MACAC,M,GAGAZ,oB,CAHAY,M;MACAC,Q,GAEAb,oB,CAFAa,Q;MACAC,W,GACAd,oB,CADAc,W;MAIAC,Y,GAIAjB,e,CAJAiB,Y;MACAC,mB,GAGAlB,e,CAHAkB,mB;MACAC,W,GAEAnB,e,CAFAmB,W;MACAC,gB,GACApB,e,CADAoB,gB;AAGJ,OAAO,MAAMC,cAAN,SAA6B1B,SAA7B,CAAuC;AAE1C2B,EAAAA,WAAW,GAAI;AACX;;AADW,SAQfC,6BARe,GAQiB,CAACC,WAAD,EAAcC,WAAd,KAA8B;AAC1D,WAAKC,QAAL,CAAc;AAAED,QAAAA,WAAW,EAAEA;AAAf,OAAd;AACA,WAAKE,KAAL,CAAWC,iBAAX,CAA6BJ,WAA7B;AACH,KAXc;;AAAA,SAafK,iBAbe,GAaK,MAAM;AACtB,YAAMC,OAAO,GAAGlC,UAAU,CAACmC,qBAAX,EAAhB;AACA,WAAKJ,KAAL,CAAWK,cAAX,CAA0BF,OAA1B;AACH,KAhBc;;AAAA,SAkBfG,iBAlBe,GAkBKC,KAAK,IAAI;AAAA,YAErBC,iBAFqB,GAGrB,KAAKR,KAHgB,CAErBQ,iBAFqB;AAKzB,YAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAjC;AACAH,MAAAA,iBAAiB,CAACC,WAAD,CAAjB;AACA,WAAKG,kBAAL,CAAwB3B,cAAxB,EAAwC,IAAxC,EAA8C,IAA9C,EAAoDwB,WAApD;AACH,KA1Bc;;AAAA,SA4BfI,iBA5Be,GA4BKN,KAAK,IAAI;AACzB,YAAMV,WAAW,GAAGU,KAAK,CAACG,MAAN,CAAaC,KAAjC;;AACA,cAAOd,WAAP;AACA,aAAKb,GAAL;AACI,eAAKY,6BAAL,CAAmCZ,GAAnC,EAAwC8B,SAAxC;AACA,eAAKF,kBAAL,CAAwB5B,GAAxB;AACA;;AACJ,aAAKC,cAAL;AACI,eAAKW,6BAAL,CAAmCX,cAAnC,EAAmD6B,SAAnD;AACA,eAAKd,KAAL,CAAWK,cAAX,CAA0B,EAA1B;AACA;;AACJ,aAAKnB,KAAL;AACI,eAAKU,6BAAL,CAAmCV,KAAnC;AACA,eAAK0B,kBAAL,CAAwB1B,KAAxB;AACA;;AACJ,aAAKC,MAAL;AACI,eAAKS,6BAAL,CAAmCT,MAAnC,EAA2C,KAAK4B,gBAAL,EAA3C;AACA,eAAKH,kBAAL,CAAwBzB,MAAxB;AACA;;AACJ,aAAKC,QAAL;AACI,eAAKQ,6BAAL,CAAmCR,QAAnC;AACA,eAAKwB,kBAAL,CAAwBxB,QAAxB;AACA;;AACJ,aAAKC,WAAL;AACI,eAAKO,6BAAL,CAAmCP,WAAnC,EAAgD,KAAK2B,oBAAL,EAAhD;AACA,eAAKJ,kBAAL,CAAwBvB,WAAxB;AACA;;AACJ;AACI,eAAKO,6BAAL,CAAmCkB,SAAnC,EAA8CA,SAA9C;AACA,eAAKd,KAAL,CAAWK,cAAX,CAA0B,EAA1B;AACA;AA5BJ;AA8BH,KA5Dc;;AAAA,SA8DfY,aA9De,GA8DC,CAACpB,WAAD,EAAcqB,eAAd,EAA+BC,WAA/B,EAA4CV,WAA5C,KAA4D;AACxE,aAAO;AACHA,QAAAA,WAAW,EAAEA,WADV;AAEHZ,QAAAA,WAAW,EAAEA,WAFV;AAGHuB,QAAAA,MAAM,EAAE;AACJF,UAAAA,eAAe,EAAEA,eAAe,GAAGA,eAAH,GAAqBJ,SADjD;AAEJH,UAAAA,KAAK,EAAEQ,WAAW,GAAGA,WAAH,GAAiBL;AAF/B;AAHL,OAAP;AAQH,KAvEc;;AAAA,SAyEfO,uBAzEe,GAyEW,CAACd,KAAD,EAAQV,WAAR,EAAqBqB,eAArB,KAAyC;AAC/D,WAAKN,kBAAL,CAAwBf,WAAxB,EAAqCqB,eAArC,EAAsDX,KAAK,CAACG,MAAN,CAAaC,KAAnE,EAA0E,KAAKX,KAAL,CAAWS,WAArF;AACH,KA3Ec;;AAAA,SA6EfG,kBA7Ee,GA6EM,CAACf,WAAD,EAAcqB,eAAd,EAA+BC,WAA/B,EAA4CV,WAA5C,KAA4D;AAC7E,YAAMa,OAAO,GAAG,KAAKL,aAAL,CAAmBpB,WAAnB,EAAgCqB,eAAhC,EAAiDC,WAAjD,EAA8DV,WAA9D,CAAhB;AACA,YAAMc,UAAU,GAAGtD,UAAU,CAACuD,kBAAX,CAA8BF,OAA9B,CAAnB;AACA,WAAKtB,KAAL,CAAWK,cAAX,CAA0BkB,UAA1B;AACH,KAjFc;;AAAA,SAmFfE,uBAnFe,GAmFW,MAAM;AAC5B,aAAO,oBAAC,mBAAD;AACH,QAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWS,WADrB;AAEH,QAAA,iBAAiB,EAAE,KAAKH,iBAFrB;AAGH,QAAA,8BAA8B,EAAEC,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCtB,cAApC,EAAoDM,mBAAmB,CAACmC,UAAxE,CAHtC;AAIH,QAAA,6BAA6B,EAAEnB,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCtB,cAApC,EAAoDK,YAAY,CAACqC,IAAjE,CAJrC;AAKH,QAAA,iCAAiC,EAAEpB,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCtB,cAApC,EAAoDM,mBAAmB,CAACqC,QAAxE,CALzC;AAMH,QAAA,mBAAmB,EAAErB,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCtB,cAApC,EAAoDM,mBAAmB,CAACsC,KAAxE,CAN3B;AAOH,QAAA,qBAAqB,EAAEtB,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCtB,cAApC,EAAoDM,mBAAmB,CAACuC,QAAxE,CAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AASH,KA7Fc;;AAAA,SA+Fff,gBA/Fe,GA+FI,MAAM;AACrB,aAAQ,oBAAC,eAAD;AACJ,QAAA,yBAAyB,EAAER,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCpB,MAApC,EAA4CG,YAAY,CAACqC,IAAzD,CADhC;AAEJ,QAAA,4BAA4B,EAAEpB,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCpB,MAApC,EAA4CK,WAAW,CAACuC,SAAxD,CAFnC;AAGJ,QAAA,0BAA0B,EAAExB,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoCpB,MAApC,EAA4CK,WAAW,CAACwC,YAAxD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAKH,KArGc;;AAAA,SAuGfhB,oBAvGe,GAuGQ,MAAM;AACzB,aAAO,oBAAC,gBAAD;AAAkB,QAAA,0BAA0B,EAAET,KAAK,IAAI,KAAKc,uBAAL,CAA6Bd,KAA7B,EAAoClB,WAApC,EAAiDI,gBAAgB,CAACwC,OAAlE,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAzGc;;AAAA,SA2GfC,UA3Ge,GA2GF,MAAM;AAAA,0BAKX,KAAKlC,KALM;AAAA,YAEXmC,QAFW,eAEXA,QAFW;AAAA,YAGXC,kBAHW,eAGXA,kBAHW;AAAA,YAIXC,mBAJW,eAIXA,mBAJW;AAOfF,MAAAA,QAAQ,GAAGE,mBAAmB,EAAtB,GAA2BD,kBAAkB,EAArD;AACH,KAnHc;;AAAA,SAqHfE,gBArHe,GAqHIC,gBAAgB,IAAI;AAAA,2BAM/B,KAAKvC,KAN0B;AAAA,YAE/BwC,0BAF+B,gBAE/BA,0BAF+B;AAAA,YAG/BC,aAH+B,gBAG/BA,aAH+B;AAAA,YAI/BC,aAJ+B,gBAI/BA,aAJ+B;AAAA,YAK/BC,aAL+B,gBAK/BA,aAL+B;AAQnC,YAAMC,SAAS,GAAGF,aAAa,KAAKpE,cAAc,CAACuE,GAAjC,GACZJ,aAAa,CAACK,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACR,gBAAD,CAAD,GAAsBS,CAAC,CAACT,gBAAD,CAAxB,GAA8C,CAAC,CAA/C,GAAmD,CAAhF,CADY,GAEZE,aAAa,CAACK,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACR,gBAAD,CAAD,GAAsBS,CAAC,CAACT,gBAAD,CAAxB,GAA8C,CAA9C,GAAkD,CAAC,CAAhF,CAFN;AAGA,WAAKvC,KAAL,CAAWK,cAAX,CAA0BuC,SAA1B;;AACA,UAAG,CAAC9D,OAAO,CAACyD,gBAAD,EAAmBI,aAAnB,CAAX,EAA6C;AACzCH,QAAAA,0BAA0B,CAACD,gBAAD,CAA1B;AACH;AAEJ,KArIc;;AAAA,SAuIfU,0BAvIe,GAuIc1C,KAAK,IAAI;AAClC,YAAMoC,aAAa,GAAG9D,SAAS,CAAC0B,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA/B;AACA,WAAK2B,gBAAL,CAAsBK,aAAtB;AACH,KA1Ic;;AAAA,SA4IfO,UA5Ie,GA4IF,MAAM;AAAA,2BAIX,KAAKlD,KAJM;AAAA,YAEX2C,aAFW,gBAEXA,aAFW;AAAA,YAGXQ,mBAHW,gBAGXA,mBAHW;AAMfA,MAAAA,mBAAmB;AACnB,WAAKb,gBAAL,CAAsBK,aAAtB;AACH,KApJc;;AAEX,SAAKS,KAAL,GAAa;AACTtD,MAAAA,WAAW,EAAEgB;AADJ,KAAb;AAGA,SAAKlB,6BAAL,GAAqC,KAAKA,6BAAL,CAAmCyD,IAAnC,CAAwC,IAAxC,CAArC;AACH;;AAgJDC,EAAAA,MAAM,GAAG;AAAA,yBAQD,KAAKtD,KARJ;AAAA,UAGDyC,aAHC,gBAGDA,aAHC;AAAA,UAID5C,WAJC,gBAIDA,WAJC;AAAA,UAKD0D,SALC,gBAKDA,SALC;AAAA,UAMDC,UANC,gBAMDA,UANC;AAAA,UAODd,aAPC,gBAODA,aAPC;AAUL,UAAMe,kBAAkB,GAAG5D,WAAW,KAAKZ,cAAhB,GACrB,KAAKwC,uBAAL,EADqB,GAErB,KAAK2B,KAAL,CAAWtD,WAFjB;AAIA,UAAM4D,cAAc,GAAGH,SAAS,GACxB,oBAAC,eAAD;AAAiB,MAAA,cAAc,EAAEd,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADwB,GAExB,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAEA,aAAvB;AAAsC,MAAA,UAAU,EAAEe,UAAlD;AAA8D,MAAA,WAAW,EAAE3D,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAIA,WACI,0CACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,sBAAD;AACI,MAAA,UAAU,EAAE,KAAKqC,UADrB;AAEI,MAAA,gBAAgB,EAAE,KAAKlC,KAAL,CAAW2D,gBAFjC;AAGI,MAAA,UAAU,EAAEH,UAHhB;AAII,MAAA,WAAW,EAAE3D,WAJjB;AAKI,MAAA,gBAAgB,EAAE,KAAKoD,0BAL3B;AAMI,MAAA,aAAa,EAAEP,aANnB;AAOI,MAAA,mBAAmB,EAAE,KAAKQ,UAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI,oBAAC,sBAAD;AACI,MAAA,iBAAiB,EAAE,KAAKrC,iBAD5B;AAEI,MAAA,WAAW,EAAE4C,kBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAgBKhB,aAAa,GAAGiB,cAAH,GAAoB,qBAhBtC,EAiBI,oBAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAsC,MAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDjB,aAAa,CAACmB,MAApE,CAjBJ,CADJ;AAsBH;;AAhMyC","sourcesContent":["import React, { Component } from 'react';\nimport { ClientData } from '../shared/api/clientData';\nimport Typography from '@material-ui/core/Typography';\nimport { CollectionTable } from './table/table';\nimport { Cards } from './domain/displayData/cards/cards';\nimport { DATA_ATTRIBUTES, SORT_DIRECTION } from '../shared/constants/stringConstantsSelectors';\nimport { PRODUCT_TYPE_DETAILS } from '../shared/constants/domainConstantSelectors';\nimport { ActionFigureFilters } from './buttons/filterButtonGroups/actionFigures/actionFigureFilters';\nimport { VideoGameFilters } from './buttons/filterButtonGroups/mediaFilters/videoGameFilters';\nimport { AllMovieFilters } from './buttons/filterButtonGroups/mediaFilters/allMovieFilters';\nimport { CommonButtonCollection } from './buttons/commonButtonCollection';\nimport { CommonFilterCollection } from './buttons/filterButtonGroups/commonFilterCollection';\nimport camelCase from 'lodash/camelCase';\nimport isEqual from 'lodash/isEqual';\n\nimport Modal from './modal/modal';\n\nconst {\n    ALL,\n    ACTION_FIGURES,\n    LEGOS,\n    MOVIES,\n    VEHICLES,\n    VIDEO_GAMES,\n} = PRODUCT_TYPE_DETAILS;\n\nconst {\n    PROD_COMMONS,\n    PROD_ACTION_FIGURES,\n    PROD_MOVIES,\n    PROD_VIDEO_GAMES,\n} = DATA_ATTRIBUTES;\n\nexport class CollectionList extends Component {\n\n    constructor () {\n        super();\n        this.state = {\n            filterGroup: undefined,\n        };\n        this.changeStateBasedOnProductType = this.changeStateBasedOnProductType.bind(this);\n    }\n\n    changeStateBasedOnProductType = (productType, filterGroup) => {\n        this.setState({ filterGroup: filterGroup });\n        this.props.changeProductType(productType);\n    }\n\n    getAllBlackSeries = () => {\n        const allData = ClientData.getAllBlackSeriesData();\n        this.props.setDisplayData(allData);\n    }\n\n    handleProductLine = event => {\n        const {\n            changeProductLine,\n        } = this.props;\n\n        const productLine = event.target.value;\n        changeProductLine(productLine);\n        this.handleFilterChange(ACTION_FIGURES, null, null, productLine);\n    }\n\n    handleProductType = event => {\n        const productType = event.target.value;\n        switch(productType) {\n        case ALL:\n            this.changeStateBasedOnProductType(ALL, undefined);\n            this.handleFilterChange(ALL); \n            break;\n        case ACTION_FIGURES:\n            this.changeStateBasedOnProductType(ACTION_FIGURES, undefined);\n            this.props.setDisplayData([]); \n            break;\n        case LEGOS:\n            this.changeStateBasedOnProductType(LEGOS);\n            this.handleFilterChange(LEGOS);\n            break;\n        case MOVIES:\n            this.changeStateBasedOnProductType(MOVIES, this.movieFilterGroup());\n            this.handleFilterChange(MOVIES);\n            break;\n        case VEHICLES:\n            this.changeStateBasedOnProductType(VEHICLES);\n            this.handleFilterChange(VEHICLES);\n            break;\n        case VIDEO_GAMES:\n            this.changeStateBasedOnProductType(VIDEO_GAMES, this.videoGameFilterGroup());\n            this.handleFilterChange(VIDEO_GAMES);\n            break;\n        default: \n            this.changeStateBasedOnProductType(undefined, undefined);\n            this.props.setDisplayData([]);\n            break;\n        }\n    }\n\n    createRequest = (productType, filterAttribute, filterValue, productLine) => {\n        return {\n            productLine: productLine,\n            productType: productType,\n            filter: {\n                filterAttribute: filterAttribute ? filterAttribute : undefined,\n                value: filterValue ? filterValue : undefined,\n            },\n        };\n    }\n\n    handleEventFilterChange = (event, productType, filterAttribute) => {\n        this.handleFilterChange(productType, filterAttribute, event.target.value, this.props.productLine);\n    };\n\n    handleFilterChange = (productType, filterAttribute, filterValue, productLine) => {\n        const request = this.createRequest(productType, filterAttribute, filterValue, productLine);\n        const collection = ClientData.handleDataRequests(request);\n        this.props.setDisplayData(collection);\n    };\n       \n    actionFigureFilterGroup = () => { \n        return <ActionFigureFilters\n            productLine={this.props.productLine} \n            handleProductLine={this.handleProductLine}\n            handleFilterChangeByAssortment={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.ASSORTMENT)}\n            handleFilterChangeByCharacter={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_COMMONS.NAME)}\n            handleFilterChangeByContentSource={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.MOVIE_TV)} \n            handleFilterByGroup={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.GROUP)}\n            handleFilterByVersion={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.VERSIONS)}\n        />;\n    }\n\n    movieFilterGroup = () => { \n        return  <AllMovieFilters \n            handleFilterChangeByMovie={event => this.handleEventFilterChange(event, MOVIES, PROD_COMMONS.NAME)}\n            handleFilterChangeByMovieSet={event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_SET)}\n            handleFilterChangeByFormat={event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_FORMAT)}\n        />;\n    }\n\n    videoGameFilterGroup = () => {\n        return <VideoGameFilters handleFilterChangeBySystem={event => this.handleEventFilterChange(event, VIDEO_GAMES, PROD_VIDEO_GAMES.SYSTEMS)}/>;\n    }\n\n    toggleView = () => {\n        const {\n            cardView,\n            enableViewTypeCard,\n            enableViewTypeTable,\n        } = this.props;\n\n        cardView ? enableViewTypeTable() : enableViewTypeCard();\n    };\n\n    handleSortChange = newSortAttribute => {\n        const { \n            changeCurrentSortAttribute,\n            displayedData,\n            sortDirection,\n            sortAttribute,\n        } = this.props;\n\n        const sortAlpha = sortDirection === SORT_DIRECTION.ASC \n            ? displayedData.sort((a, b) => (a[newSortAttribute] > b[newSortAttribute]) ? -1 : 1)\n            : displayedData.sort((a, b) => (a[newSortAttribute] > b[newSortAttribute]) ? 1 : -1);\n        this.props.setDisplayData(sortAlpha);\n        if(!isEqual(newSortAttribute, sortAttribute)){\n            changeCurrentSortAttribute(newSortAttribute);\n        }\n\n    };\n\n    handleSortChangeFromFilter = event => {\n        const sortAttribute = camelCase(event.target.value);\n        this.handleSortChange(sortAttribute);\n    };\n\n    toggleSort = () => {\n        const { \n            sortAttribute,\n            toggleSortDirection,\n        } = this.props;\n         \n        toggleSortDirection();\n        this.handleSortChange(sortAttribute);\n    };\n\n    render() {\n\n        const {\n            displayedData,\n            productType,\n            tableView,\n            realImages,\n            sortDirection,\n        } = this.props;\n\n        const displayFilterGroup = productType === ACTION_FIGURES\n            ? this.actionFigureFilterGroup() \n            : this.state.filterGroup;\n\n        const collectionView = tableView \n            ?   <CollectionTable collectionData={displayedData}/>\n            :   <Cards collectionData={displayedData} realImages={realImages} productType={productType}/>;\n\n        return (\n            <>\n                <Modal />\n                <CommonButtonCollection \n                    toggleView={this.toggleView}\n                    toggleRealImages={this.props.toggleRealImages}\n                    realImages={realImages} \n                    productType={productType}\n                    handleSortChange={this.handleSortChangeFromFilter}\n                    sortDirection={sortDirection}\n                    toggleSortDirection={this.toggleSort}\n                />\n                <br/>\n                <CommonFilterCollection \n                    handleProductType={this.handleProductType}\n                    filterGroup={displayFilterGroup}\n                />\n                {displayedData ? collectionView : 'No Collection Found'}\n                <Typography gutterBottom variant='h5' component='h2'>{displayedData.length}</Typography>\n            </>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}