{"ast":null,"code":"var _jsxFileName = \"/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/components/collectionList.js\";\nimport React, { Component } from 'react';\nimport { ClientData } from 'shared/api/clientData';\nimport Typography from '@material-ui/core/Typography';\nimport { CollectionTable } from 'components/common/displayData/table/table';\nimport { DATA_ATTRIBUTES, SORT_DIRECTION, FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\nconst PROD_COMMONS = DATA_ATTRIBUTES.PROD_COMMONS,\n      PROD_ACTION_FIGURES = DATA_ATTRIBUTES.PROD_ACTION_FIGURES,\n      PROD_MOVIES = DATA_ATTRIBUTES.PROD_MOVIES,\n      PROD_VIDEO_GAMES = DATA_ATTRIBUTES.PROD_VIDEO_GAMES;\nexport class CollectionList extends Component {\n  constructor() {\n    super();\n\n    this.changeStateBasedOnProductType = (productType, filterGroup) => {\n      this.setState({\n        filterGroup: filterGroup\n      });\n      this.props.changeProductType(productType);\n    };\n\n    this.getAllBlackSeries = () => {\n      const allData = ClientData.getAllBlackSeriesData();\n      this.props.setDisplayData(allData);\n    };\n\n    this.createRequest = (productType, filterAttribute, filterValue, productLine) => {\n      return {\n        productLine: productLine,\n        productType: productType,\n        filter: {\n          filterAttribute: filterAttribute ? filterAttribute : undefined,\n          value: filterValue ? filterValue : undefined\n        }\n      };\n    };\n\n    this.handleEventFilterChange = (event, productType, filterAttribute) => {\n      this.handleFilterChange(productType, filterAttribute, event.target.value, this.props.productLine);\n    };\n\n    this.handleFilterChange = (productType, filterAttribute, filterValue, productLine) => {\n      const request = this.createRequest(productType, filterAttribute, filterValue, productLine);\n      ClientData.handleDataRequests(request).then(data => {\n        this.props.setDisplayData(data);\n      });\n    };\n\n    this.actionFigureFilterGroup = () => {\n      return React.createElement(ActionFigureFilters, {\n        productLine: this.props.productLine,\n        handleProductLine: this.handleProductLine,\n        handleFilterChangeByAssortment: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.ASSORTMENT),\n        handleFilterChangeByCharacter: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_COMMONS.NAME),\n        handleFilterChangeByContentSource: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.MOVIE_TV),\n        handleFilterByGroup: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.GROUP),\n        handleFilterByVersion: event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.VERSIONS),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    };\n\n    this.movieFilterGroup = () => {\n      return React.createElement(AllMovieFilters, {\n        handleFilterChangeByMovie: event => this.handleEventFilterChange(event, MOVIES, PROD_COMMONS.NAME),\n        handleFilterChangeByMovieSet: event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_SET),\n        handleFilterChangeByFormat: event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_FORMAT),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    };\n\n    this.videoGameFilterGroup = () => {\n      return React.createElement(SingleSelect, {\n        handleFilterChangeBySystem: event => this.handleEventFilterChange(event, VIDEO_GAMES, PROD_VIDEO_GAMES.SYSTEMS),\n        inputLabel: FILTER_LABELS.SYSTEMS,\n        menuItems: VIDEO_GAME_SYSTEMS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    };\n\n    this.toggleView = () => {\n      const _this$props = this.props,\n            cardView = _this$props.cardView,\n            enableViewTypeCard = _this$props.enableViewTypeCard,\n            enableViewTypeTable = _this$props.enableViewTypeTable;\n      cardView ? enableViewTypeTable() : enableViewTypeCard();\n    };\n\n    this.handleSortChange = newSortAttribute => {\n      const _this$props2 = this.props,\n            changeCurrentSortAttribute = _this$props2.changeCurrentSortAttribute,\n            displayedData = _this$props2.displayedData,\n            sortDirection = _this$props2.sortDirection,\n            sortAttribute = _this$props2.sortAttribute;\n      const sortAlpha = sortDirection === SORT_DIRECTION.ASC ? displayedData.sort((a, b) => a[newSortAttribute] > b[newSortAttribute] ? -1 : 1) : displayedData.sort((a, b) => a[newSortAttribute] > b[newSortAttribute] ? 1 : -1);\n      this.props.setDisplayData(sortAlpha);\n\n      if (!isEqual(newSortAttribute, sortAttribute)) {\n        changeCurrentSortAttribute(newSortAttribute);\n      }\n    };\n\n    this.handleSortChangeFromFilter = event => {\n      const sortAttribute = camelCase(event.target.value);\n      this.handleSortChange(sortAttribute);\n    };\n\n    this.toggleSort = () => {\n      const _this$props3 = this.props,\n            sortAttribute = _this$props3.sortAttribute,\n            toggleSortDirection = _this$props3.toggleSortDirection;\n      toggleSortDirection();\n      this.handleSortChange(sortAttribute);\n    };\n\n    this.state = {\n      filterGroup: undefined\n    };\n    this.changeStateBasedOnProductType = this.changeStateBasedOnProductType.bind(this);\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          cardView = _this$props4.cardView,\n          displayedData = _this$props4.displayedData,\n          productType = _this$props4.productType,\n          tableView = _this$props4.tableView,\n          realImages = _this$props4.realImages,\n          sortDirection = _this$props4.sortDirection,\n          demoMode = _this$props4.demoMode;\n    const displayFilterGroup = productType === ACTION_FIGURES ? this.actionFigureFilterGroup() : this.state.filterGroup;\n    const collectionView = tableView ? React.createElement(CollectionTable, {\n      collectionData: displayedData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : React.createElement(Cards, {\n      collectionData: displayedData,\n      realImages: realImages,\n      productType: productType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, null, React.createElement(CommonButtonCollection, {\n      toggleView: this.toggleView,\n      toggleRealImages: this.props.toggleRealImages,\n      realImages: realImages,\n      productType: productType,\n      handleSortChange: this.handleSortChangeFromFilter,\n      sortDirection: sortDirection,\n      toggleSortDirection: this.toggleSort,\n      cardView: cardView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(CommonFilterCollection, {\n      handleProductType: this.handleProductType,\n      filterGroup: displayFilterGroup,\n      demoMode: demoMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), displayedData ? collectionView : 'No Collection Found', React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, displayedData.length));\n  }\n\n}","map":{"version":3,"sources":["/Users/kylecardiel/Documents/Development/Frontend/watchlistdashboard/src/components/collectionList.js"],"names":["React","Component","ClientData","Typography","CollectionTable","DATA_ATTRIBUTES","SORT_DIRECTION","FILTER_LABELS","PROD_COMMONS","PROD_ACTION_FIGURES","PROD_MOVIES","PROD_VIDEO_GAMES","CollectionList","constructor","changeStateBasedOnProductType","productType","filterGroup","setState","props","changeProductType","getAllBlackSeries","allData","getAllBlackSeriesData","setDisplayData","createRequest","filterAttribute","filterValue","productLine","filter","undefined","value","handleEventFilterChange","event","handleFilterChange","target","request","handleDataRequests","then","data","actionFigureFilterGroup","handleProductLine","ACTION_FIGURES","ASSORTMENT","NAME","MOVIE_TV","GROUP","VERSIONS","movieFilterGroup","MOVIES","MOVIE_SET","MOVIE_FORMAT","videoGameFilterGroup","VIDEO_GAMES","SYSTEMS","VIDEO_GAME_SYSTEMS","toggleView","cardView","enableViewTypeCard","enableViewTypeTable","handleSortChange","newSortAttribute","changeCurrentSortAttribute","displayedData","sortDirection","sortAttribute","sortAlpha","ASC","sort","a","b","isEqual","handleSortChangeFromFilter","camelCase","toggleSort","toggleSortDirection","state","bind","render","tableView","realImages","demoMode","displayFilterGroup","collectionView","toggleRealImages","handleProductType","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ClientData } from 'shared/api/clientData';\nimport Typography from '@material-ui/core/Typography';\nimport { CollectionTable } from 'components/common/displayData/table/table';\nimport { DATA_ATTRIBUTES, SORT_DIRECTION, FILTER_LABELS } from 'shared/constants/stringConstantsSelectors';\n\nconst {\n    PROD_COMMONS,\n    PROD_ACTION_FIGURES,\n    PROD_MOVIES,\n    PROD_VIDEO_GAMES,\n} = DATA_ATTRIBUTES;\n\nexport class CollectionList extends Component {\n\n    constructor () {\n        super();\n        this.state = {\n            filterGroup: undefined,\n        };\n        this.changeStateBasedOnProductType = this.changeStateBasedOnProductType.bind(this);\n    }\n\n    changeStateBasedOnProductType = (productType, filterGroup) => {\n        this.setState({ filterGroup: filterGroup });\n        this.props.changeProductType(productType);\n    }\n\n    getAllBlackSeries = () => {\n        const allData = ClientData.getAllBlackSeriesData();\n        this.props.setDisplayData(allData);\n    }\n\n\n\n    createRequest = (productType, filterAttribute, filterValue, productLine) => {\n        return {\n            productLine: productLine,\n            productType: productType,\n            filter: {\n                filterAttribute: filterAttribute ? filterAttribute : undefined,\n                value: filterValue ? filterValue : undefined,\n            },\n        };\n    }\n\n    handleEventFilterChange = (event, productType, filterAttribute) => {\n        this.handleFilterChange(productType, filterAttribute, event.target.value, this.props.productLine);\n    };\n\n    handleFilterChange = (productType, filterAttribute, filterValue, productLine) => {\n        const request = this.createRequest(productType, filterAttribute, filterValue, productLine);\n        ClientData.handleDataRequests(request)\n            .then((data) => {\n                this.props.setDisplayData(data);\n            });\n    };\n       \n    actionFigureFilterGroup = () => { \n        return <ActionFigureFilters\n            productLine={this.props.productLine} \n            handleProductLine={this.handleProductLine}\n            handleFilterChangeByAssortment={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.ASSORTMENT)}\n            handleFilterChangeByCharacter={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_COMMONS.NAME)}\n            handleFilterChangeByContentSource={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.MOVIE_TV)} \n            handleFilterByGroup={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.GROUP)}\n            handleFilterByVersion={event => this.handleEventFilterChange(event, ACTION_FIGURES, PROD_ACTION_FIGURES.VERSIONS)}\n        />;\n    }\n\n    movieFilterGroup = () => { \n        return  <AllMovieFilters \n            handleFilterChangeByMovie={event => this.handleEventFilterChange(event, MOVIES, PROD_COMMONS.NAME)}\n            handleFilterChangeByMovieSet={event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_SET)}\n            handleFilterChangeByFormat={event => this.handleEventFilterChange(event, MOVIES, PROD_MOVIES.MOVIE_FORMAT)}\n        />;\n    }\n\n    videoGameFilterGroup = () => {\n        return <SingleSelect \n            handleFilterChangeBySystem={event => this.handleEventFilterChange(event, VIDEO_GAMES, PROD_VIDEO_GAMES.SYSTEMS)} \n            inputLabel={FILTER_LABELS.SYSTEMS}\n            menuItems={VIDEO_GAME_SYSTEMS}\n        />;\n    }\n\n    toggleView = () => {\n        const {\n            cardView,\n            enableViewTypeCard,\n            enableViewTypeTable,\n        } = this.props;\n\n        cardView ? enableViewTypeTable() : enableViewTypeCard();\n    };\n\n    handleSortChange = newSortAttribute => {\n        const { \n            changeCurrentSortAttribute,\n            displayedData,\n            sortDirection,\n            sortAttribute,\n        } = this.props;\n\n        const sortAlpha = sortDirection === SORT_DIRECTION.ASC \n            ? displayedData.sort((a, b) => (a[newSortAttribute] > b[newSortAttribute]) ? -1 : 1)\n            : displayedData.sort((a, b) => (a[newSortAttribute] > b[newSortAttribute]) ? 1 : -1);\n        this.props.setDisplayData(sortAlpha);\n        if(!isEqual(newSortAttribute, sortAttribute)){\n            changeCurrentSortAttribute(newSortAttribute);\n        }\n\n    };\n\n    handleSortChangeFromFilter = event => {\n        const sortAttribute = camelCase(event.target.value);\n        this.handleSortChange(sortAttribute);\n    };\n\n    toggleSort = () => {\n        const { \n            sortAttribute,\n            toggleSortDirection,\n        } = this.props;\n         \n        toggleSortDirection();\n        this.handleSortChange(sortAttribute);\n    };\n\n    render() {\n\n        const {\n            cardView,\n            displayedData,\n            productType,\n            tableView,\n            realImages,\n            sortDirection,\n            demoMode,\n        } = this.props;\n\n        const displayFilterGroup = productType === ACTION_FIGURES\n            ? this.actionFigureFilterGroup() \n            : this.state.filterGroup;\n\n        const collectionView = tableView \n            ?   <CollectionTable collectionData={displayedData}/>\n            :   <Cards collectionData={displayedData} realImages={realImages} productType={productType}/>;\n\n        return (\n            <>\n                {/* <Modal buttonName={'New Item'} customComp={<AddNewItemForm />}/> */}\n                <CommonButtonCollection \n                    toggleView={this.toggleView}\n                    toggleRealImages={this.props.toggleRealImages}\n                    realImages={realImages} \n                    productType={productType}\n                    handleSortChange={this.handleSortChangeFromFilter}\n                    sortDirection={sortDirection}\n                    toggleSortDirection={this.toggleSort}\n                    cardView={cardView}\n                />\n                <br/>\n                <CommonFilterCollection \n                    handleProductType={this.handleProductType}\n                    filterGroup={displayFilterGroup}\n                    demoMode={demoMode}\n                />\n                {displayedData ? collectionView : 'No Collection Found'}\n                <Typography gutterBottom variant='h5' component='h2'>{displayedData.length}</Typography>\n            </>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}